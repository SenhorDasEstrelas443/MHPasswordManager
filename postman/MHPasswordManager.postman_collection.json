{
	"info": {
		"_postman_id": "7e25b572-f971-4038-a5c2-8956e09883a0",
		"name": "MHPasswordManager",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Service-Registry",
			"item": [
				{
					"name": "Actuator Endpoints",
					"item": [
						{
							"name": "Get Actuator All End-Points",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/eureka-service-registry/actuator",
									"host": [
										"{{host}}"
									],
									"path": [
										"eureka-service-registry",
										"actuator"
									]
								}
							},
							"response": [
								{
									"name": "HTTP 200 OK",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{host}}/eureka-service-registry/actuator",
											"host": [
												"{{host}}"
											],
											"path": [
												"eureka-service-registry",
												"actuator"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "transfer-encoding",
											"value": "chunked"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "Content-Type",
											"value": "application/vnd.spring-boot.actuator.v3+json"
										},
										{
											"key": "Date",
											"value": "Tue, 20 Dec 2022 21:28:03 GMT"
										}
									],
									"cookie": [],
									"body": "{\n    \"_links\": {\n        \"self\": {\n            \"href\": \"http://192.168.1.37:8761/actuator\",\n            \"templated\": false\n        },\n        \"beans\": {\n            \"href\": \"http://192.168.1.37:8761/actuator/beans\",\n            \"templated\": false\n        },\n        \"caches-cache\": {\n            \"href\": \"http://192.168.1.37:8761/actuator/caches/{cache}\",\n            \"templated\": true\n        },\n        \"caches\": {\n            \"href\": \"http://192.168.1.37:8761/actuator/caches\",\n            \"templated\": false\n        },\n        \"health\": {\n            \"href\": \"http://192.168.1.37:8761/actuator/health\",\n            \"templated\": false\n        },\n        \"health-path\": {\n            \"href\": \"http://192.168.1.37:8761/actuator/health/{*path}\",\n            \"templated\": true\n        },\n        \"info\": {\n            \"href\": \"http://192.168.1.37:8761/actuator/info\",\n            \"templated\": false\n        },\n        \"conditions\": {\n            \"href\": \"http://192.168.1.37:8761/actuator/conditions\",\n            \"templated\": false\n        },\n        \"shutdown\": {\n            \"href\": \"http://192.168.1.37:8761/actuator/shutdown\",\n            \"templated\": false\n        },\n        \"configprops\": {\n            \"href\": \"http://192.168.1.37:8761/actuator/configprops\",\n            \"templated\": false\n        },\n        \"configprops-prefix\": {\n            \"href\": \"http://192.168.1.37:8761/actuator/configprops/{prefix}\",\n            \"templated\": true\n        },\n        \"env-toMatch\": {\n            \"href\": \"http://192.168.1.37:8761/actuator/env/{toMatch}\",\n            \"templated\": true\n        },\n        \"env\": {\n            \"href\": \"http://192.168.1.37:8761/actuator/env\",\n            \"templated\": false\n        },\n        \"loggers\": {\n            \"href\": \"http://192.168.1.37:8761/actuator/loggers\",\n            \"templated\": false\n        },\n        \"loggers-name\": {\n            \"href\": \"http://192.168.1.37:8761/actuator/loggers/{name}\",\n            \"templated\": true\n        },\n        \"heapdump\": {\n            \"href\": \"http://192.168.1.37:8761/actuator/heapdump\",\n            \"templated\": false\n        },\n        \"threaddump\": {\n            \"href\": \"http://192.168.1.37:8761/actuator/threaddump\",\n            \"templated\": false\n        },\n        \"metrics-requiredMetricName\": {\n            \"href\": \"http://192.168.1.37:8761/actuator/metrics/{requiredMetricName}\",\n            \"templated\": true\n        },\n        \"metrics\": {\n            \"href\": \"http://192.168.1.37:8761/actuator/metrics\",\n            \"templated\": false\n        },\n        \"scheduledtasks\": {\n            \"href\": \"http://192.168.1.37:8761/actuator/scheduledtasks\",\n            \"templated\": false\n        },\n        \"mappings\": {\n            \"href\": \"http://192.168.1.37:8761/actuator/mappings\",\n            \"templated\": false\n        },\n        \"refresh\": {\n            \"href\": \"http://192.168.1.37:8761/actuator/refresh\",\n            \"templated\": false\n        },\n        \"features\": {\n            \"href\": \"http://192.168.1.37:8761/actuator/features\",\n            \"templated\": false\n        },\n        \"serviceregistry\": {\n            \"href\": \"http://192.168.1.37:8761/actuator/serviceregistry\",\n            \"templated\": false\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Get Actuator Health Check",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/eureka-service-registry/actuator/health",
									"host": [
										"{{host}}"
									],
									"path": [
										"eureka-service-registry",
										"actuator",
										"health"
									]
								}
							},
							"response": [
								{
									"name": "HTTP 200 OK",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{host}}/eureka-service-registry/actuator/health",
											"host": [
												"{{host}}"
											],
											"path": [
												"eureka-service-registry",
												"actuator",
												"health"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "transfer-encoding",
											"value": "chunked"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "Content-Type",
											"value": "application/vnd.spring-boot.actuator.v3+json"
										},
										{
											"key": "Date",
											"value": "Tue, 20 Dec 2022 21:26:18 GMT"
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": \"UP\",\n    \"groups\": [\n        \"custom\"\n    ]\n}"
								}
							]
						},
						{
							"name": "Get Actuator Health Check with Details",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/eureka-service-registry/actuator/health/custom",
									"host": [
										"{{host}}"
									],
									"path": [
										"eureka-service-registry",
										"actuator",
										"health",
										"custom"
									]
								}
							},
							"response": [
								{
									"name": "HTTP 200 OK",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{host}}/eureka-service-registry/actuator/health/custom",
											"host": [
												"{{host}}"
											],
											"path": [
												"eureka-service-registry",
												"actuator",
												"health",
												"custom"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "transfer-encoding",
											"value": "chunked"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "Content-Type",
											"value": "application/vnd.spring-boot.actuator.v3+json"
										},
										{
											"key": "Date",
											"value": "Tue, 20 Dec 2022 21:26:22 GMT"
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": \"UP\",\n    \"components\": {\n        \"diskSpace\": {\n            \"status\": \"UP\",\n            \"details\": {\n                \"total\": 126224109568,\n                \"free\": 56453152768,\n                \"threshold\": 10485760,\n                \"exists\": true\n            }\n        },\n        \"ping\": {\n            \"status\": \"UP\"\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Get Actuator View All Metrics",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/eureka-service-registry/actuator/metrics",
									"host": [
										"{{host}}"
									],
									"path": [
										"eureka-service-registry",
										"actuator",
										"metrics"
									]
								}
							},
							"response": [
								{
									"name": "HTTP 200 OK",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{host}}/eureka-service-registry/actuator/metrics",
											"host": [
												"{{host}}"
											],
											"path": [
												"eureka-service-registry",
												"actuator",
												"metrics"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "transfer-encoding",
											"value": "chunked"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "Content-Type",
											"value": "application/vnd.spring-boot.actuator.v3+json"
										},
										{
											"key": "Date",
											"value": "Tue, 20 Dec 2022 21:31:24 GMT"
										}
									],
									"cookie": [],
									"body": "{\n    \"names\": [\n        \"application.ready.time\",\n        \"application.started.time\",\n        \"disk.free\",\n        \"disk.total\",\n        \"executor.active\",\n        \"executor.completed\",\n        \"executor.pool.core\",\n        \"executor.pool.max\",\n        \"executor.pool.size\",\n        \"executor.queue.remaining\",\n        \"executor.queued\",\n        \"http.server.requests\",\n        \"jvm.buffer.count\",\n        \"jvm.buffer.memory.used\",\n        \"jvm.buffer.total.capacity\",\n        \"jvm.classes.loaded\",\n        \"jvm.classes.unloaded\",\n        \"jvm.gc.live.data.size\",\n        \"jvm.gc.max.data.size\",\n        \"jvm.gc.memory.allocated\",\n        \"jvm.gc.memory.promoted\",\n        \"jvm.gc.overhead\",\n        \"jvm.gc.pause\",\n        \"jvm.memory.committed\",\n        \"jvm.memory.max\",\n        \"jvm.memory.usage.after.gc\",\n        \"jvm.memory.used\",\n        \"jvm.threads.daemon\",\n        \"jvm.threads.live\",\n        \"jvm.threads.peak\",\n        \"jvm.threads.states\",\n        \"logback.events\",\n        \"process.cpu.usage\",\n        \"process.files.max\",\n        \"process.files.open\",\n        \"process.start.time\",\n        \"process.uptime\",\n        \"system.cpu.count\",\n        \"system.cpu.usage\",\n        \"system.load.average.1m\",\n        \"tomcat.sessions.active.current\",\n        \"tomcat.sessions.active.max\",\n        \"tomcat.sessions.alive.max\",\n        \"tomcat.sessions.created\",\n        \"tomcat.sessions.expired\",\n        \"tomcat.sessions.rejected\"\n    ]\n}"
								}
							]
						},
						{
							"name": "Get Actuator Example Consume Metric",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/eureka-service-registry/actuator/metrics/executor.pool.core",
									"host": [
										"{{host}}"
									],
									"path": [
										"eureka-service-registry",
										"actuator",
										"metrics",
										"executor.pool.core"
									]
								}
							},
							"response": [
								{
									"name": "HTTP 200 OK",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{host}}/eureka-service-registry/actuator/metrics/executor.pool.core",
											"host": [
												"{{host}}"
											],
											"path": [
												"eureka-service-registry",
												"actuator",
												"metrics",
												"executor.pool.core"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "transfer-encoding",
											"value": "chunked"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "Content-Disposition",
											"value": "inline;filename=f.txt"
										},
										{
											"key": "Content-Type",
											"value": "application/vnd.spring-boot.actuator.v3+json"
										},
										{
											"key": "Date",
											"value": "Tue, 20 Dec 2022 21:32:01 GMT"
										}
									],
									"cookie": [],
									"body": "{\n    \"name\": \"executor.pool.core\",\n    \"description\": \"The core number of threads for the pool\",\n    \"baseUnit\": \"threads\",\n    \"measurements\": [\n        {\n            \"statistic\": \"VALUE\",\n            \"value\": 8\n        }\n    ],\n    \"availableTags\": [\n        {\n            \"tag\": \"name\",\n            \"values\": [\n                \"applicationTaskExecutor\"\n            ]\n        }\n    ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "Eureka Endpoints",
					"item": [
						{
							"name": "Get All Registered Apps",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{ServiceRegistryURL}}/eureka/apps",
									"host": [
										"{{ServiceRegistryURL}}"
									],
									"path": [
										"eureka",
										"apps"
									]
								}
							},
							"response": [
								{
									"name": "HTTP 200 OK",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{ServiceRegistryURL}}/eureka/apps",
											"host": [
												"{{ServiceRegistryURL}}"
											],
											"path": [
												"eureka",
												"apps"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "xml",
									"header": [
										{
											"key": "Content-Encoding",
											"value": "gzip"
										},
										{
											"key": "Content-Type",
											"value": "application/xml"
										},
										{
											"key": "Content-Length",
											"value": "768"
										},
										{
											"key": "Date",
											"value": "Sun, 01 Jan 2023 20:27:10 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "<applications>\n    <versions__delta>1</versions__delta>\n    <apps__hashcode>UP_2_</apps__hashcode>\n    <application>\n        <name>AUTHORIZATION-SERVER</name>\n        <instance>\n            <instanceId>192.168.1.37:authorization-server:9000</instanceId>\n            <hostName>192.168.1.37</hostName>\n            <app>AUTHORIZATION-SERVER</app>\n            <ipAddr>192.168.1.37</ipAddr>\n            <status>UP</status>\n            <overriddenstatus>UNKNOWN</overriddenstatus>\n            <port enabled=\"true\">9000</port>\n            <securePort enabled=\"false\">443</securePort>\n            <countryId>1</countryId>\n            <dataCenterInfo class=\"com.netflix.appinfo.InstanceInfo$DefaultDataCenterInfo\">\n                <name>MyOwn</name>\n            </dataCenterInfo>\n            <leaseInfo>\n                <renewalIntervalInSecs>30</renewalIntervalInSecs>\n                <durationInSecs>90</durationInSecs>\n                <registrationTimestamp>1672603915629</registrationTimestamp>\n                <lastRenewalTimestamp>1672604785767</lastRenewalTimestamp>\n                <evictionTimestamp>0</evictionTimestamp>\n                <serviceUpTimestamp>1672603915101</serviceUpTimestamp>\n            </leaseInfo>\n            <metadata>\n                <management.port>9000</management.port>\n            </metadata>\n            <homePageUrl>http://192.168.1.37:9000/</homePageUrl>\n            <statusPageUrl>http://192.168.1.37:9000/actuator/info</statusPageUrl>\n            <healthCheckUrl>http://192.168.1.37:9000/actuator/health</healthCheckUrl>\n            <vipAddress>authorization-server</vipAddress>\n            <secureVipAddress>authorization-server</secureVipAddress>\n            <isCoordinatingDiscoveryServer>false</isCoordinatingDiscoveryServer>\n            <lastUpdatedTimestamp>1672603915629</lastUpdatedTimestamp>\n            <lastDirtyTimestamp>1672603915066</lastDirtyTimestamp>\n            <actionType>ADDED</actionType>\n        </instance>\n    </application>\n    <application>\n        <name>GATEWAY</name>\n        <instance>\n            <instanceId>192.168.1.37:gateway:8765</instanceId>\n            <hostName>192.168.1.37</hostName>\n            <app>GATEWAY</app>\n            <ipAddr>192.168.1.37</ipAddr>\n            <status>UP</status>\n            <overriddenstatus>UNKNOWN</overriddenstatus>\n            <port enabled=\"true\">8765</port>\n            <securePort enabled=\"false\">443</securePort>\n            <countryId>1</countryId>\n            <dataCenterInfo class=\"com.netflix.appinfo.InstanceInfo$DefaultDataCenterInfo\">\n                <name>MyOwn</name>\n            </dataCenterInfo>\n            <leaseInfo>\n                <renewalIntervalInSecs>30</renewalIntervalInSecs>\n                <durationInSecs>90</durationInSecs>\n                <registrationTimestamp>1672603954448</registrationTimestamp>\n                <lastRenewalTimestamp>1672604764566</lastRenewalTimestamp>\n                <evictionTimestamp>0</evictionTimestamp>\n                <serviceUpTimestamp>1672603953934</serviceUpTimestamp>\n            </leaseInfo>\n            <metadata>\n                <management.port>8765</management.port>\n            </metadata>\n            <homePageUrl>http://192.168.1.37:8765/</homePageUrl>\n            <statusPageUrl>http://192.168.1.37:8765/actuator/info</statusPageUrl>\n            <healthCheckUrl>http://192.168.1.37:8765/actuator/health</healthCheckUrl>\n            <vipAddress>gateway</vipAddress>\n            <secureVipAddress>gateway</secureVipAddress>\n            <isCoordinatingDiscoveryServer>false</isCoordinatingDiscoveryServer>\n            <lastUpdatedTimestamp>1672603954449</lastUpdatedTimestamp>\n            <lastDirtyTimestamp>1672603953909</lastDirtyTimestamp>\n            <actionType>ADDED</actionType>\n        </instance>\n    </application>\n</applications>"
								}
							]
						},
						{
							"name": "Get Registered GATEWAY",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{ServiceRegistryURL}}/eureka/apps/GATEWAY",
									"host": [
										"{{ServiceRegistryURL}}"
									],
									"path": [
										"eureka",
										"apps",
										"GATEWAY"
									]
								}
							},
							"response": [
								{
									"name": "HTTP 200 OK",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{ServiceRegistryURL}}/eureka/apps/GATEWAY",
											"host": [
												"{{ServiceRegistryURL}}"
											],
											"path": [
												"eureka",
												"apps",
												"GATEWAY"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "xml",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/xml"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Sun, 01 Jan 2023 20:43:20 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "<application>\n    <name>GATEWAY</name>\n    <instance>\n        <instanceId>192.168.1.37:gateway:8765</instanceId>\n        <hostName>192.168.1.37</hostName>\n        <app>GATEWAY</app>\n        <ipAddr>192.168.1.37</ipAddr>\n        <status>UP</status>\n        <overriddenstatus>UNKNOWN</overriddenstatus>\n        <port enabled=\"true\">8765</port>\n        <securePort enabled=\"false\">443</securePort>\n        <countryId>1</countryId>\n        <dataCenterInfo class=\"com.netflix.appinfo.InstanceInfo$DefaultDataCenterInfo\">\n            <name>MyOwn</name>\n        </dataCenterInfo>\n        <leaseInfo>\n            <renewalIntervalInSecs>30</renewalIntervalInSecs>\n            <durationInSecs>90</durationInSecs>\n            <registrationTimestamp>1672603954448</registrationTimestamp>\n            <lastRenewalTimestamp>1672605754731</lastRenewalTimestamp>\n            <evictionTimestamp>0</evictionTimestamp>\n            <serviceUpTimestamp>1672603953934</serviceUpTimestamp>\n        </leaseInfo>\n        <metadata>\n            <management.port>8765</management.port>\n        </metadata>\n        <homePageUrl>http://192.168.1.37:8765/</homePageUrl>\n        <statusPageUrl>http://192.168.1.37:8765/actuator/info</statusPageUrl>\n        <healthCheckUrl>http://192.168.1.37:8765/actuator/health</healthCheckUrl>\n        <vipAddress>gateway</vipAddress>\n        <secureVipAddress>gateway</secureVipAddress>\n        <isCoordinatingDiscoveryServer>false</isCoordinatingDiscoveryServer>\n        <lastUpdatedTimestamp>1672603954449</lastUpdatedTimestamp>\n        <lastDirtyTimestamp>1672603953909</lastDirtyTimestamp>\n        <actionType>ADDED</actionType>\n    </instance>\n</application>"
								}
							]
						},
						{
							"name": "Get Registered AUTHORIZATION-SERVER",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{ServiceRegistryURL}}/eureka/apps/AUTHORIZATION-SERVER",
									"host": [
										"{{ServiceRegistryURL}}"
									],
									"path": [
										"eureka",
										"apps",
										"AUTHORIZATION-SERVER"
									]
								}
							},
							"response": [
								{
									"name": "HTTP 200 OK",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{ServiceRegistryURL}}/eureka/apps/AUTHORIZATION-SERVER",
											"host": [
												"{{ServiceRegistryURL}}"
											],
											"path": [
												"eureka",
												"apps",
												"AUTHORIZATION-SERVER"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "xml",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/xml"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Sun, 01 Jan 2023 20:43:30 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "<application>\n    <name>AUTHORIZATION-SERVER</name>\n    <instance>\n        <instanceId>192.168.1.37:authorization-server:9000</instanceId>\n        <hostName>192.168.1.37</hostName>\n        <app>AUTHORIZATION-SERVER</app>\n        <ipAddr>192.168.1.37</ipAddr>\n        <status>UP</status>\n        <overriddenstatus>UNKNOWN</overriddenstatus>\n        <port enabled=\"true\">9000</port>\n        <securePort enabled=\"false\">443</securePort>\n        <countryId>1</countryId>\n        <dataCenterInfo class=\"com.netflix.appinfo.InstanceInfo$DefaultDataCenterInfo\">\n            <name>MyOwn</name>\n        </dataCenterInfo>\n        <leaseInfo>\n            <renewalIntervalInSecs>30</renewalIntervalInSecs>\n            <durationInSecs>90</durationInSecs>\n            <registrationTimestamp>1672603915629</registrationTimestamp>\n            <lastRenewalTimestamp>1672605865930</lastRenewalTimestamp>\n            <evictionTimestamp>0</evictionTimestamp>\n            <serviceUpTimestamp>1672603915101</serviceUpTimestamp>\n        </leaseInfo>\n        <metadata>\n            <management.port>9000</management.port>\n        </metadata>\n        <homePageUrl>http://192.168.1.37:9000/</homePageUrl>\n        <statusPageUrl>http://192.168.1.37:9000/actuator/info</statusPageUrl>\n        <healthCheckUrl>http://192.168.1.37:9000/actuator/health</healthCheckUrl>\n        <vipAddress>authorization-server</vipAddress>\n        <secureVipAddress>authorization-server</secureVipAddress>\n        <isCoordinatingDiscoveryServer>false</isCoordinatingDiscoveryServer>\n        <lastUpdatedTimestamp>1672603915629</lastUpdatedTimestamp>\n        <lastDirtyTimestamp>1672603915066</lastDirtyTimestamp>\n        <actionType>ADDED</actionType>\n    </instance>\n</application>"
								}
							]
						},
						{
							"name": "Get Registered USERS-SERVICE",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{ServiceRegistryURL}}/eureka/apps/USERS",
									"host": [
										"{{ServiceRegistryURL}}"
									],
									"path": [
										"eureka",
										"apps",
										"USERS"
									]
								}
							},
							"response": [
								{
									"name": "HTTP 200 OK",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{ServiceRegistryURL}}/eureka/apps/USERS",
											"host": [
												"{{ServiceRegistryURL}}"
											],
											"path": [
												"eureka",
												"apps",
												"USERS"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "xml",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/xml"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Sun, 01 Jan 2023 20:43:47 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "<application>\n    <name>USERS</name>\n    <instance>\n        <instanceId>192.168.1.37:users:8000</instanceId>\n        <hostName>192.168.1.37</hostName>\n        <app>USERS</app>\n        <ipAddr>192.168.1.37</ipAddr>\n        <status>OUT_OF_SERVICE</status>\n        <overriddenstatus>OUT_OF_SERVICE</overriddenstatus>\n        <port enabled=\"true\">8000</port>\n        <securePort enabled=\"false\">443</securePort>\n        <countryId>1</countryId>\n        <dataCenterInfo class=\"com.netflix.appinfo.InstanceInfo$DefaultDataCenterInfo\">\n            <name>MyOwn</name>\n        </dataCenterInfo>\n        <leaseInfo>\n            <renewalIntervalInSecs>30</renewalIntervalInSecs>\n            <durationInSecs>90</durationInSecs>\n            <registrationTimestamp>1672604868112</registrationTimestamp>\n            <lastRenewalTimestamp>1672605888246</lastRenewalTimestamp>\n            <evictionTimestamp>0</evictionTimestamp>\n            <serviceUpTimestamp>1672604867602</serviceUpTimestamp>\n        </leaseInfo>\n        <metadata>\n            <management.port>8000</management.port>\n        </metadata>\n        <homePageUrl>http://192.168.1.37:8000/</homePageUrl>\n        <statusPageUrl>http://192.168.1.37:8000/actuator/info</statusPageUrl>\n        <healthCheckUrl>http://192.168.1.37:8000/actuator/health</healthCheckUrl>\n        <vipAddress>users</vipAddress>\n        <secureVipAddress>users</secureVipAddress>\n        <isCoordinatingDiscoveryServer>false</isCoordinatingDiscoveryServer>\n        <lastUpdatedTimestamp>1672605794638</lastUpdatedTimestamp>\n        <lastDirtyTimestamp>1672604867580</lastDirtyTimestamp>\n        <actionType>MODIFIED</actionType>\n    </instance>\n</application>"
								}
							]
						},
						{
							"name": "Set instance OUT-OF-SERVICE",
							"request": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{ServiceRegistryURL}}/eureka/apps/{{ServiceRegistryExampleAppId}}/{{ServiceRegistryExampleInstanceId}}/status?value=OUT_OF_SERVICE",
									"host": [
										"{{ServiceRegistryURL}}"
									],
									"path": [
										"eureka",
										"apps",
										"{{ServiceRegistryExampleAppId}}",
										"{{ServiceRegistryExampleInstanceId}}",
										"status"
									],
									"query": [
										{
											"key": "value",
											"value": "OUT_OF_SERVICE"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Set instance UP",
							"request": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{ServiceRegistryURL}}/eureka/apps/{{ServiceRegistryExampleAppId}}/{{ServiceRegistryExampleInstanceId}}/status?value=UP",
									"host": [
										"{{ServiceRegistryURL}}"
									],
									"path": [
										"eureka",
										"apps",
										"{{ServiceRegistryExampleAppId}}",
										"{{ServiceRegistryExampleInstanceId}}",
										"status"
									],
									"query": [
										{
											"key": "value",
											"value": "UP"
										}
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Authorization Server",
			"item": [
				{
					"name": "Actuator",
					"item": [
						{
							"name": "Get Actuator All End-Points",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{AuthorizationServerURL}}/actuator",
									"host": [
										"{{AuthorizationServerURL}}"
									],
									"path": [
										"actuator"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Actuator Health Check",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{AuthorizationServerURL}}/actuator/health",
									"host": [
										"{{AuthorizationServerURL}}"
									],
									"path": [
										"actuator",
										"health"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Actuator Health Check with Details",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{AuthorizationServerURL}}/actuator/health/custom",
									"host": [
										"{{AuthorizationServerURL}}"
									],
									"path": [
										"actuator",
										"health",
										"custom"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Actuator View All Metrics",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{AuthorizationServerURL}}/actuator/metrics",
									"host": [
										"{{AuthorizationServerURL}}"
									],
									"path": [
										"actuator",
										"metrics"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Actuator Example Consume Metric",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{AuthorizationServerURL}}/actuator/metrics/executor.pool.core",
									"host": [
										"{{AuthorizationServerURL}}"
									],
									"path": [
										"actuator",
										"metrics",
										"executor.pool.core"
									]
								}
							},
							"response": []
						},
						{
							"name": "Shutdown Application",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{AuthorizationServerURL}}/actuator/shutdown",
									"host": [
										"{{AuthorizationServerURL}}"
									],
									"path": [
										"actuator",
										"shutdown"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "OAuth2",
					"item": [
						{
							"name": "Get Token with Client Credentials",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"if (responseCode.code >= 200 && responseCode.code < 300) {",
											"    var json = JSON.parse(responseBody);",
											"    pm.collectionVariables.set(\"BearerToken\", json.access_token);",
											"    pm.collectionVariables.set(\"RefreshToken\", json.refresh_token);",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{ClientCredentials-ClientSecret}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{ClientCredentials-ClientId}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "grant_type",
											"value": "client_credentials",
											"type": "default"
										},
										{
											"key": "scope",
											"value": "user:canCreate user:canWrite user:canRead",
											"type": "default"
										}
									],
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{AuthorizationServerURL}}/oauth2/token",
									"host": [
										"{{AuthorizationServerURL}}"
									],
									"path": [
										"oauth2",
										"token"
									]
								}
							},
							"response": [
								{
									"name": "HTTP 200 OK",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "grant_type",
													"value": "client_credentials",
													"type": "text"
												},
												{
													"key": "scope",
													"value": "user:canCreate",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{AuthorizationServerURL}}/oauth2/token",
											"host": [
												"{{AuthorizationServerURL}}"
											],
											"path": [
												"oauth2",
												"token"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "Set-Cookie",
											"value": "JSESSIONID=7B78EDF7BB41AFE387651F8E61624817; Path=/; HttpOnly"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json;charset=UTF-8"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Tue, 20 Dec 2022 22:27:09 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"access_token\": \"eyJraWQiOiJkZWQ5YWUwZS1lZjM3LTRmMTgtOTdiYi04YjNlNWU0MzAzN2YiLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiJkN2U0ZTFjZS1iY2M2LTQ3ZWMtODAwZi0yYjYxNjczOTk3ODUiLCJhdWQiOiJkN2U0ZTFjZS1iY2M2LTQ3ZWMtODAwZi0yYjYxNjczOTk3ODUiLCJuYmYiOjE2NzE1NzUyMjksInNjb3BlIjpbInVzZXI6Y2FuQ3JlYXRlIl0sImlzcyI6Imh0dHA6Ly9sb2NhbGhvc3Q6OTAwMCIsImV4cCI6MTY3MTU3NTQwOSwiaWF0IjoxNjcxNTc1MjI5fQ.PRHnXvAyM_Ffv0LVpv-8oHQ6GJ09oajigXKZiWKhYW5zvDEfNJxLij35ZPnY_Em5u6dmSowmhTDvNJWq_AGO4_MyATs72BonuqaWYu4gvhzGYRO4oxBUvH3dZ9fYK8j4nKZ9z_V6RFFf6v2ksxjtXoNwQU8VsnWIkjaLQD0AusJQcemA6vzj1VhOgUVK2xrh5kp8ofBH3qMGAYxwr9aKR4XSW5gSfHpojSZ2-Bv7C7vemyO_FnapKsBDVEkLjzxmKz5XpvJHsi7rGUARuK-shlJh9I23gKh50DVA4cRXKK22gXc6RczQfh97nicakjd4Y1dLiAPWwoeVIL1Cxg0mvg\",\n    \"scope\": \"user:canCreate\",\n    \"token_type\": \"Bearer\",\n    \"expires_in\": 179\n}"
								}
							]
						},
						{
							"name": "Get Token with Authorization Code",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"if (responseCode.code >= 200 && responseCode.code < 300) {\r",
											"    var json = JSON.parse(responseBody);\r",
											"    pm.collectionVariables.set(\"BearerToken\", json.access_token);\r",
											"    pm.collectionVariables.set(\"RefreshToken\", json.refresh_token);\r",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{AuthorizationCode-ClientSecret}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{AuthorizationCode-ClientId}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "grant_type",
											"value": "authorization_code",
											"type": "text"
										},
										{
											"key": "code",
											"value": "{{AuthorizationCode}}",
											"type": "text"
										},
										{
											"key": "redirect_uri",
											"value": "http://127.0.0.1:8100/authorize",
											"type": "default"
										}
									]
								},
								"url": {
									"raw": "{{AuthorizationServerURL}}/oauth2/token",
									"host": [
										"{{AuthorizationServerURL}}"
									],
									"path": [
										"oauth2",
										"token"
									]
								}
							},
							"response": [
								{
									"name": "HTTP 200 OK",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "grant_type",
													"value": "authorization_code",
													"type": "text"
												},
												{
													"key": "code",
													"value": "KNaYSWcGpBu75DyQAnTivfuWgXbZNmHCNSURYzPYlOHLt0EbX7HDLQt7c0dYZosj6jjvy9i6BreGcD4jc_buwGqy6tOEw8Aybn_cGf3fVOSt5SS27Gpa6Y1P1vIxkZ8-",
													"type": "text"
												},
												{
													"key": "redirect_uri",
													"value": "https://oidcdebugger.com/debug",
													"type": "default"
												}
											]
										},
										"url": {
											"raw": "{{AuthorizationServerURL}}/oauth2/token",
											"host": [
												"{{AuthorizationServerURL}}"
											],
											"path": [
												"oauth2",
												"token"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "Set-Cookie",
											"value": "JSESSIONID=A9CFE018E63AADC1FA02809C2F70160C; Path=/; HttpOnly"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json;charset=UTF-8"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Tue, 20 Dec 2022 22:32:37 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"access_token\": \"eyJraWQiOiJkZWQ5YWUwZS1lZjM3LTRmMTgtOTdiYi04YjNlNWU0MzAzN2YiLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiJqb2huZG9lQGVtYWlsLmNvbSIsImF1ZCI6IjkyYTY3MDkxLTQyNjQtNGNlNC04ZmNiLTNlYzZkYmZlZWExNiIsIm5iZiI6MTY3MTU3NTU1Nywic2NvcGUiOlsidXNlcjpjYW5SZWFkIl0sImlzcyI6Imh0dHA6Ly9sb2NhbGhvc3Q6OTAwMCIsImV4cCI6MTY3MTU3NjQ1NywiaWF0IjoxNjcxNTc1NTU3fQ.Q5T5XGoRVLCyPFkr_naM8xrWKbnM-vSSbS0tIPt3wjhF-UEhp9SAYd0LyRRUhp9Ppw7XrWIBIs8c-i3IaH8sE3mz7eESaivEMz-CLJTeaZM8jnzfO-cq92edzNaFchaVmwdG6IAv6IiS5yl0Sq8XJXtJUqTqXlykn3Ey2BQ0N6nWrcC_aWfq7Bsl7bcTZDY-W0XXGvVu9lvqoO-llZ75ApHvvoD_tehmBuMUflyZADXIA3e8k7DLDe8zjZOq0e251Djp31iHLRcDsgiBYbTFOTIW6MAW_Jq-Ietd6OAMWP1dzgDx1FqRbxMu89N-ueHpFeLTjps-Wp5BlzcwJj6KSA\",\n    \"refresh_token\": \"l4DfOPzseAvGIfTJURNh_E9aM-80nTwYtrMtQ-oKA9DkqbT6BV7pRthA-3OTIz06un5l08WMwcWmDyp8RHVol86Zh-ZwQoozBPAggSEbGmZhue8KMpvQoMckOzfgF7ej\",\n    \"scope\": \"user:canRead\",\n    \"token_type\": \"Bearer\",\n    \"expires_in\": 899\n}"
								}
							]
						},
						{
							"name": "Get Token with Refresh Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"if (responseCode.code >= 200 && responseCode.code < 300) {",
											"    var json = JSON.parse(responseBody);",
											"    pm.collectionVariables.set(\"BearerToken\", json.access_token);",
											"    pm.collectionVariables.set(\"RefreshToken\", json.refresh_token);",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{AuthorizationCode-ClientSecret}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{AuthorizationCode-ClientId}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "grant_type",
											"value": "refresh_token",
											"type": "default"
										},
										{
											"key": "refresh_token",
											"value": "{{RefreshToken}}",
											"type": "default"
										}
									]
								},
								"url": {
									"raw": "{{AuthorizationServerURL}}/oauth2/token",
									"host": [
										"{{AuthorizationServerURL}}"
									],
									"path": [
										"oauth2",
										"token"
									]
								}
							},
							"response": [
								{
									"name": "HTTP 200 OK",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "grant_type",
													"value": "refresh_token",
													"type": "default"
												},
												{
													"key": "refresh_token",
													"value": "{{RefreshToken}}",
													"type": "default"
												}
											]
										},
										"url": {
											"raw": "{{AuthorizationServerURL}}/oauth2/token",
											"host": [
												"{{AuthorizationServerURL}}"
											],
											"path": [
												"oauth2",
												"token"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json;charset=UTF-8"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 30 Dec 2022 23:33:05 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"access_token\": \"eyJraWQiOiJkMzI4MTVmMy1hMmIxLTQwZWYtOTAyOC0xYTAwY2VkZDdjZTEiLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiJqb2huZG9lQGVtYWlsLmNvbSIsImF1ZCI6IjkyYTY3MDkxLTQyNjQtNGNlNC04ZmNiLTNlYzZkYmZlZWExNiIsIm5iZiI6MTY3MjQ0MzE4NSwic2NvcGUiOlsidXNlcjpjYW5TZWxmUmVhZCJdLCJpc3MiOiJodHRwOi8vbG9jYWxob3N0OjkwMDAiLCJleHAiOjE2NzI0NDQwODUsImlhdCI6MTY3MjQ0MzE4NX0.ZThoQZbXvIAYBqkpnAOZk4B_Sk4oWu-fxuS7O90nR5qyk2RGVk0FOGPShuHmKXdglTj3-s0Q6-Iy5da7qE9fP7ZncUm5Qrv-mCmz8xoUdCZXqeO9vQVbUFQtj8RXx_Ghy3WPvgwBQ-oSDH7ibAyO4sQ4HXSiXFG8ZqRLG9jSXPlxj5agLG9oi9KqRMbuJFgBd2O7saY6FR4Yf3R2Q03YZxo9yFGGN79XEpwcNi4S4iT1EQGYnkzHEJDytqec6R7gLetHuR5TzAdhiZoVgC2rq0y53Gt8cZiumtHXTtUgD7EByR1ETcgikB-hOQwY0__WBwv1YMuv1LXhmHVBwPol-g\",\n    \"refresh_token\": \"5SnvxNrrSCJiOGiSsr2JkgMJ1CzoiDfPpFy3uimbu5pCNuOh9l4WX9aefH3gxBbui0BqA52Pdl2ZgV1jqVN2fEQ1zAtR1msPWZvFE361E-kMyHuvM0n49iw6B-9CoKC9\",\n    \"scope\": \"user:canSelfRead\",\n    \"token_type\": \"Bearer\",\n    \"expires_in\": 899\n}"
								}
							]
						},
						{
							"name": "Get Token Data with Introspect",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"if (responseCode.code >= 200 && responseCode.code < 300) {\r",
											"    var json = JSON.parse(responseBody);\r",
											"    pm.collectionVariables.set(\"BearerToken\", json.access_token);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{AuthorizationCode-ClientSecret}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{AuthorizationCode-ClientId}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "default"
										}
									]
								},
								"url": {
									"raw": "{{AuthorizationServerURL}}/oauth2/introspect",
									"host": [
										"{{AuthorizationServerURL}}"
									],
									"path": [
										"oauth2",
										"introspect"
									]
								}
							},
							"response": [
								{
									"name": "HTTP 200 OK with Client Credentials Token",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "default"
												}
											]
										},
										"url": {
											"raw": "{{AuthorizationServerURL}}/oauth2/introspect",
											"host": [
												"{{AuthorizationServerURL}}"
											],
											"path": [
												"oauth2",
												"introspect"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "Set-Cookie",
											"value": "JSESSIONID=E0C591C9625A4A3936B1684322EF70A7; Path=/; HttpOnly"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Tue, 20 Dec 2022 22:27:12 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"active\": true,\n    \"sub\": \"d7e4e1ce-bcc6-47ec-800f-2b6167399785\",\n    \"aud\": [\n        \"d7e4e1ce-bcc6-47ec-800f-2b6167399785\"\n    ],\n    \"nbf\": 1671575229,\n    \"scope\": \"user:canCreate\",\n    \"iss\": \"http://localhost:9000\",\n    \"exp\": 1671575409,\n    \"iat\": 1671575229,\n    \"client_id\": \"d7e4e1ce-bcc6-47ec-800f-2b6167399785\",\n    \"token_type\": \"Bearer\"\n}"
								},
								{
									"name": "HTTP 200 OK with Authorization Code Token",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "default"
												}
											]
										},
										"url": {
											"raw": "{{AuthorizationServerURL}}/oauth2/introspect",
											"host": [
												"{{AuthorizationServerURL}}"
											],
											"path": [
												"oauth2",
												"introspect"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Wed, 21 Dec 2022 01:21:49 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"active\": true,\n    \"sub\": \"johndoe@email.com\",\n    \"aud\": [\n        \"92a67091-4264-4ce4-8fcb-3ec6dbfeea16\"\n    ],\n    \"nbf\": 1671585635,\n    \"scope\": \"user:canRead\",\n    \"iss\": \"http://localhost:9000\",\n    \"exp\": 1671586535,\n    \"iat\": 1671585635,\n    \"client_id\": \"92a67091-4264-4ce4-8fcb-3ec6dbfeea16\",\n    \"token_type\": \"Bearer\"\n}"
								},
								{
									"name": "HTTP 200 OK with Invalid Token",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "default"
												}
											]
										},
										"url": {
											"raw": "{{AuthorizationServerURL}}/oauth2/introspect",
											"host": [
												"{{AuthorizationServerURL}}"
											],
											"path": [
												"oauth2",
												"introspect"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "Set-Cookie",
											"value": "JSESSIONID=0194E0DB182088D9C59BDD4DB8D2DDBB; Path=/; HttpOnly"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Tue, 20 Dec 2022 22:33:28 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"active\": false\n}"
								}
							]
						},
						{
							"name": "Get Public Key Algorithm for Auths - JWKS",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"if (responseCode.code >= 200 && responseCode.code < 300) {\r",
											"    var json = JSON.parse(responseBody);\r",
											"    pm.collectionVariables.set(\"BearerToken\", json.access_token);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{AuthorizationServerURL}}/oauth2/jwks",
									"host": [
										"{{AuthorizationServerURL}}"
									],
									"path": [
										"oauth2",
										"jwks"
									]
								}
							},
							"response": [
								{
									"name": "HTTP 200 OK",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{AuthorizationServerURL}}/oauth2/jwks",
											"host": [
												"{{AuthorizationServerURL}}"
											],
											"path": [
												"oauth2",
												"jwks"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json;charset=ISO-8859-1"
										},
										{
											"key": "Content-Length",
											"value": "429"
										},
										{
											"key": "Date",
											"value": "Tue, 20 Dec 2022 22:37:48 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"keys\": [\n        {\n            \"kty\": \"RSA\",\n            \"e\": \"AQAB\",\n            \"kid\": \"ded9ae0e-ef37-4f18-97bb-8b3e5e43037f\",\n            \"n\": \"r1GMJjvHNCHWaJl7hoUFiW8f-UhJY-zbn7WQtGys7bv_vAvXSSKsxRxf-ZwgQhDDVDDIi08SfcAX5HLYfwqwpFal07sEfEdv9vBU_4PuJZujlX8loHCJ6tUhPYlWkKsly5T8Dq0OagB1Qt4TSkhM8oSIMsdEKw-hn4oR2dZmueJDvggXMF5t_6qM-lk5aBnB6YHqz21NFVRoDe9uJjzlxlUNrVcvyYD5HkNfLdDVdiWOSe57wnJrl42vIBYKR-jWu2dnpyb0tRW1eqfaIZjPW42SmQwGpfDXSqQ9CEem8VND3MO2jLZC31I0-_gIWOBAfWns6whu4aCYqk6S5dKOoQ\"\n        }\n    ]\n}"
								}
							]
						}
					],
					"auth": {
						"type": "noauth"
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "MHPasswordManager-User-Service",
			"item": [
				{
					"name": "Get Actuator All End-Points",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{BearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/users/actuator",
							"host": [
								"{{host}}"
							],
							"path": [
								"users",
								"actuator"
							]
						}
					},
					"response": [
						{
							"name": "HTTP 200 OK",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/users/actuator",
									"host": [
										"{{host}}"
									],
									"path": [
										"users",
										"actuator"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "transfer-encoding",
									"value": "chunked"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/vnd.spring-boot.actuator.v3+json"
								},
								{
									"key": "Date",
									"value": "Fri, 07 Apr 2023 14:36:44 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"_links\": {\n        \"self\": {\n            \"href\": \"http://localhost:12011/users/actuator\",\n            \"templated\": false\n        },\n        \"health\": {\n            \"href\": \"http://localhost:12011/users/actuator/health\",\n            \"templated\": false\n        },\n        \"health-path\": {\n            \"href\": \"http://localhost:12011/users/actuator/health/{*path}\",\n            \"templated\": true\n        },\n        \"info\": {\n            \"href\": \"http://localhost:12011/users/actuator/info\",\n            \"templated\": false\n        },\n        \"metrics-requiredMetricName\": {\n            \"href\": \"http://localhost:12011/users/actuator/metrics/{requiredMetricName}\",\n            \"templated\": true\n        },\n        \"metrics\": {\n            \"href\": \"http://localhost:12011/users/actuator/metrics\",\n            \"templated\": false\n        }\n    }\n}"
						}
					]
				},
				{
					"name": "Get Actuator Health Check",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{BearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/users/actuator/health",
							"host": [
								"{{host}}"
							],
							"path": [
								"users",
								"actuator",
								"health"
							]
						}
					},
					"response": [
						{
							"name": "HTTP 200 OK",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/users/actuator/health",
									"host": [
										"{{host}}"
									],
									"path": [
										"users",
										"actuator",
										"health"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "transfer-encoding",
									"value": "chunked"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/vnd.spring-boot.actuator.v3+json"
								},
								{
									"key": "Date",
									"value": "Fri, 07 Apr 2023 14:37:11 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": \"UP\",\n    \"groups\": [\n        \"details\"\n    ]\n}"
						}
					]
				},
				{
					"name": "Get Actuator Health Check with Details",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{BearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/users/actuator/health/details",
							"host": [
								"{{host}}"
							],
							"path": [
								"users",
								"actuator",
								"health",
								"details"
							]
						}
					},
					"response": [
						{
							"name": "HTTP 200 OK - Using Credentials",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/users/actuator/health/details",
									"host": [
										"{{host}}"
									],
									"path": [
										"users",
										"actuator",
										"health",
										"details"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "transfer-encoding",
									"value": "chunked"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/vnd.spring-boot.actuator.v3+json"
								},
								{
									"key": "Date",
									"value": "Fri, 07 Apr 2023 14:37:51 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": \"UP\",\n    \"components\": {\n        \"db\": {\n            \"status\": \"UP\",\n            \"details\": {\n                \"database\": \"PostgreSQL\",\n                \"validationQuery\": \"isValid()\"\n            }\n        }\n    }\n}"
						},
						{
							"name": "HTTP 200 OK - Without Credentials",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/users/actuator/health/details",
									"host": [
										"{{host}}"
									],
									"path": [
										"users",
										"actuator",
										"health",
										"details"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "transfer-encoding",
									"value": "chunked"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/vnd.spring-boot.actuator.v3+json"
								},
								{
									"key": "Date",
									"value": "Fri, 07 Apr 2023 14:38:18 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": \"UP\"\n}"
						}
					]
				},
				{
					"name": "Get Actuator View All Metrics",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{BearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/users/actuator/metrics",
							"host": [
								"{{host}}"
							],
							"path": [
								"users",
								"actuator",
								"metrics"
							]
						}
					},
					"response": [
						{
							"name": "HTTP 200 OK",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/users/actuator/metrics",
									"host": [
										"{{host}}"
									],
									"path": [
										"users",
										"actuator",
										"metrics"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "transfer-encoding",
									"value": "chunked"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/vnd.spring-boot.actuator.v3+json"
								},
								{
									"key": "Date",
									"value": "Fri, 07 Apr 2023 14:39:04 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"names\": [\n        \"application.ready.time\",\n        \"application.started.time\",\n        \"disk.free\",\n        \"disk.total\",\n        \"executor.active\",\n        \"executor.completed\",\n        \"executor.pool.core\",\n        \"executor.pool.max\",\n        \"executor.pool.size\",\n        \"executor.queue.remaining\",\n        \"executor.queued\",\n        \"hikaricp.connections\",\n        \"hikaricp.connections.acquire\",\n        \"hikaricp.connections.active\",\n        \"hikaricp.connections.creation\",\n        \"hikaricp.connections.idle\",\n        \"hikaricp.connections.max\",\n        \"hikaricp.connections.min\",\n        \"hikaricp.connections.pending\",\n        \"hikaricp.connections.timeout\",\n        \"hikaricp.connections.usage\",\n        \"http.server.requests\",\n        \"jdbc.connections.max\",\n        \"jdbc.connections.min\",\n        \"jvm.buffer.count\",\n        \"jvm.buffer.memory.used\",\n        \"jvm.buffer.total.capacity\",\n        \"jvm.classes.loaded\",\n        \"jvm.classes.unloaded\",\n        \"jvm.gc.live.data.size\",\n        \"jvm.gc.max.data.size\",\n        \"jvm.gc.memory.allocated\",\n        \"jvm.gc.memory.promoted\",\n        \"jvm.gc.overhead\",\n        \"jvm.gc.pause\",\n        \"jvm.memory.committed\",\n        \"jvm.memory.max\",\n        \"jvm.memory.usage.after.gc\",\n        \"jvm.memory.used\",\n        \"jvm.threads.daemon\",\n        \"jvm.threads.live\",\n        \"jvm.threads.peak\",\n        \"jvm.threads.states\",\n        \"logback.events\",\n        \"process.cpu.usage\",\n        \"process.files.max\",\n        \"process.files.open\",\n        \"process.start.time\",\n        \"process.uptime\",\n        \"spring.data.repository.invocations\",\n        \"system.cpu.count\",\n        \"system.cpu.usage\",\n        \"system.load.average.1m\",\n        \"tomcat.sessions.active.current\",\n        \"tomcat.sessions.active.max\",\n        \"tomcat.sessions.alive.max\",\n        \"tomcat.sessions.created\",\n        \"tomcat.sessions.expired\",\n        \"tomcat.sessions.rejected\"\n    ]\n}"
						}
					]
				},
				{
					"name": "Get Actuator Example Consume Metric",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{BearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/users/actuator/metrics/executor.pool.core",
							"host": [
								"{{host}}"
							],
							"path": [
								"users",
								"actuator",
								"metrics",
								"executor.pool.core"
							]
						}
					},
					"response": [
						{
							"name": "HTTP 200 OK - Consuming 'executor.pool.core' metric",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/users/actuator/metrics/executor.pool.core",
									"host": [
										"{{host}}"
									],
									"path": [
										"users",
										"actuator",
										"metrics",
										"executor.pool.core"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "transfer-encoding",
									"value": "chunked"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "Content-Disposition",
									"value": "inline;filename=f.txt"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/vnd.spring-boot.actuator.v3+json"
								},
								{
									"key": "Date",
									"value": "Fri, 07 Apr 2023 14:39:36 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"name\": \"executor.pool.core\",\n    \"description\": \"The core number of threads for the pool\",\n    \"baseUnit\": \"threads\",\n    \"measurements\": [\n        {\n            \"statistic\": \"VALUE\",\n            \"value\": 8\n        }\n    ],\n    \"availableTags\": [\n        {\n            \"tag\": \"name\",\n            \"values\": [\n                \"applicationTaskExecutor\"\n            ]\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "View All Roles",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{BearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/users/role/all",
							"host": [
								"{{host}}"
							],
							"path": [
								"users",
								"role",
								"all"
							]
						}
					},
					"response": [
						{
							"name": "HTTP 200 OK",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/users/role/all",
									"host": [
										"{{host}}"
									],
									"path": [
										"users",
										"role",
										"all"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "transfer-encoding",
									"value": "chunked"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Date",
									"value": "Sat, 21 Jan 2023 22:04:22 GMT"
								}
							],
							"cookie": [],
							"body": "[\n    \"ADMIN\",\n    \"MASTER\",\n    \"USER\"\n]"
						}
					]
				},
				{
					"name": "View All Users",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{BearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/users/account/all",
							"host": [
								"{{host}}"
							],
							"path": [
								"users",
								"account",
								"all"
							]
						}
					},
					"response": [
						{
							"name": "HTTP 200 OK",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/users/account/all",
									"host": [
										"{{host}}"
									],
									"path": [
										"users",
										"account",
										"all"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "transfer-encoding",
									"value": "chunked"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Date",
									"value": "Fri, 07 Apr 2023 14:26:56 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"content\": [\n        {\n            \"username\": \"admin@mhpasswordmanager.com\",\n            \"enabled\": true,\n            \"firstName\": \"Default\",\n            \"lastName\": \"Administrator\",\n            \"roles\": [\n                \"ROLE_MASTER\",\n                \"ROLE_USER\",\n                \"ROLE_ADMIN\"\n            ]\n        },\n        {\n            \"username\": \"anonymous@mhpasswordmanager.com\",\n            \"enabled\": true,\n            \"firstName\": \"Anonymous\",\n            \"lastName\": \"User\",\n            \"roles\": [\n                \"ROLE_USER\"\n            ]\n        }\n    ],\n    \"pageable\": {\n        \"sort\": {\n            \"empty\": false,\n            \"sorted\": true,\n            \"unsorted\": false\n        },\n        \"offset\": 0,\n        \"pageNumber\": 0,\n        \"pageSize\": 2000,\n        \"paged\": true,\n        \"unpaged\": false\n    },\n    \"last\": true,\n    \"totalPages\": 1,\n    \"totalElements\": 2,\n    \"size\": 2000,\n    \"number\": 0,\n    \"sort\": {\n        \"empty\": false,\n        \"sorted\": true,\n        \"unsorted\": false\n    },\n    \"first\": true,\n    \"numberOfElements\": 2,\n    \"empty\": false\n}"
						}
					]
				},
				{
					"name": "View AccountDetails from User",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{BearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/users/account/admin@mhpasswordmanager.com/data",
							"host": [
								"{{host}}"
							],
							"path": [
								"users",
								"account",
								"admin@mhpasswordmanager.com",
								"data"
							]
						}
					},
					"response": [
						{
							"name": "HTTP 200 OK",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/users/account/admin@mhpasswordmanager.com/data",
									"host": [
										"{{host}}"
									],
									"path": [
										"users",
										"account",
										"admin@mhpasswordmanager.com",
										"data"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "transfer-encoding",
									"value": "chunked"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Date",
									"value": "Fri, 07 Apr 2023 14:27:30 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"username\": \"admin@mhpasswordmanager.com\",\n    \"enabled\": true,\n    \"firstName\": \"Default\",\n    \"lastName\": \"Administrator\",\n    \"roles\": [\n        \"ROLE_MASTER\",\n        \"ROLE_USER\",\n        \"ROLE_ADMIN\"\n    ]\n}"
						},
						{
							"name": "HTTP 404 NOT FOUND",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/users/account/notfound@mhpasswordmanager.com/data",
									"host": [
										"{{host}}"
									],
									"path": [
										"users",
										"account",
										"notfound@mhpasswordmanager.com",
										"data"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Length",
									"value": "0"
								},
								{
									"key": "Date",
									"value": "Fri, 07 Apr 2023 14:28:35 GMT"
								}
							],
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "Update Data from User",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{BearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstName\": \"Global\",\n    \"lastName\": \"Administrator\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/users/account/admin@mhpasswordmanager.com/updateData",
							"host": [
								"{{host}}"
							],
							"path": [
								"users",
								"account",
								"admin@mhpasswordmanager.com",
								"updateData"
							]
						}
					},
					"response": [
						{
							"name": "HTTP 200 OK",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"firstName\": \"Global\",\n    \"lastName\": \"Administrator\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/users/account/admin@mhpasswordmanager.com/updateData",
									"host": [
										"{{host}}"
									],
									"path": [
										"users",
										"account",
										"admin@mhpasswordmanager.com",
										"updateData"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Length",
									"value": "0"
								},
								{
									"key": "Date",
									"value": "Fri, 07 Apr 2023 14:32:52 GMT"
								}
							],
							"cookie": [],
							"body": null
						},
						{
							"name": "HTTP 404 NOT FOUND",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"firstName\": \"Global\",\n    \"lastName\": \"Administrator\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/users/account/notfound@mhpasswordmanager.com/updateData",
									"host": [
										"{{host}}"
									],
									"path": [
										"users",
										"account",
										"notfound@mhpasswordmanager.com",
										"updateData"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Length",
									"value": "0"
								},
								{
									"key": "Date",
									"value": "Fri, 07 Apr 2023 14:33:22 GMT"
								}
							],
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "Update Password from Account",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"oldPassword\": \"P@ssword123\",\n    \"newPassword\": \"S3cr3tP@ss123\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/users/account/admin@mhpasswordmanager.com/updatePassword",
							"host": [
								"{{host}}"
							],
							"path": [
								"users",
								"account",
								"admin@mhpasswordmanager.com",
								"updatePassword"
							]
						}
					},
					"response": [
						{
							"name": "HTTP 200 OK",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"oldPassword\": \"P@ssword123\",\n    \"newPassword\": \"S3cr3tP@ss123\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/users/account/admin@mhpasswordmanager.com/updatePassword",
									"host": [
										"{{host}}"
									],
									"path": [
										"users",
										"account",
										"admin@mhpasswordmanager.com",
										"updatePassword"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Length",
									"value": "0"
								},
								{
									"key": "Date",
									"value": "Fri, 07 Apr 2023 14:50:24 GMT"
								}
							],
							"cookie": [],
							"body": null
						},
						{
							"name": "HTTP 403 FORBIDDEN - Token Sub is different from requested email.",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"oldPassword\": \"P@ssword123\",\n    \"newPassword\": \"S3cr3tP@ss123\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/users/account/anonymous@mhpasswordmanager.com/updatePassword",
									"host": [
										"{{host}}"
									],
									"path": [
										"users",
										"account",
										"anonymous@mhpasswordmanager.com",
										"updatePassword"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "WWW-Authenticate",
									"value": "Bearer error=\"insufficient_scope\", error_description=\"The request requires higher privileges than provided by the access token.\", error_uri=\"https://tools.ietf.org/html/rfc6750#section-3.1\""
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Length",
									"value": "0"
								},
								{
									"key": "Date",
									"value": "Fri, 07 Apr 2023 14:50:49 GMT"
								}
							],
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "Update Enabled from Account",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{BearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"enabled\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/users/account/admin@mhpasswordmanager.com/updateEnabled",
							"host": [
								"{{host}}"
							],
							"path": [
								"users",
								"account",
								"admin@mhpasswordmanager.com",
								"updateEnabled"
							]
						}
					},
					"response": [
						{
							"name": "HTTP 200 OK",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"enabled\": false\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/users/account/admin@mhpasswordmanager.com/updateEnabled",
									"host": [
										"{{host}}"
									],
									"path": [
										"users",
										"account",
										"admin@mhpasswordmanager.com",
										"updateEnabled"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Length",
									"value": "0"
								},
								{
									"key": "Date",
									"value": "Fri, 07 Apr 2023 14:56:00 GMT"
								}
							],
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "Reset Password from Account",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{BearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"newPassword\": \"P@ssword123\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/users/account/admin@mhpasswordmanager.com/resetPassword",
							"host": [
								"{{host}}"
							],
							"path": [
								"users",
								"account",
								"admin@mhpasswordmanager.com",
								"resetPassword"
							]
						}
					},
					"response": [
						{
							"name": "HTTP 200 OK",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"newPassword\": \"P@ssword123\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/users/account/admin@mhpasswordmanager.com/resetPassword",
									"host": [
										"{{host}}"
									],
									"path": [
										"users",
										"account",
										"admin@mhpasswordmanager.com",
										"resetPassword"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Length",
									"value": "0"
								},
								{
									"key": "Date",
									"value": "Fri, 07 Apr 2023 15:00:37 GMT"
								}
							],
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "Register a new Account",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{BearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstName\": \"Marcos\",\n    \"lastName\": \"Santana\",\n    \"email\": \"me@marcoshssilva.com.br\",\n    \"password\": \"MyS3cr3tP@ssw0rd2023\",\n    \"roles\": [\n        \"ADMIN\",\n        \"USER\"\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/users/account/create",
							"host": [
								"{{host}}"
							],
							"path": [
								"users",
								"account",
								"create"
							]
						}
					},
					"response": [
						{
							"name": "HTTP 200 OK",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"firstName\": \"Marcos\",\n    \"lastName\": \"Santana\",\n    \"email\": \"me@marcoshssilva.com.br\",\n    \"password\": \"MyS3cr3tP@ssw0rd2023\",\n    \"roles\": [\n        \"ADMIN\",\n        \"USER\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/users/account/create",
									"host": [
										"{{host}}"
									],
									"path": [
										"users",
										"account",
										"create"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Length",
									"value": "0"
								},
								{
									"key": "Date",
									"value": "Fri, 07 Apr 2023 15:03:41 GMT"
								}
							],
							"cookie": [],
							"body": null
						},
						{
							"name": "HTTP 400 BAD REQUEST - Account already exists",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"firstName\": \"Marcos\",\n    \"lastName\": \"Santana\",\n    \"email\": \"me@marcoshssilva.com.br\",\n    \"password\": \"MyS3cr3tP@ssw0rd2023\",\n    \"roles\": [\n        \"ADMIN\",\n        \"USER\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/users/account/create",
									"host": [
										"{{host}}"
									],
									"path": [
										"users",
										"account",
										"create"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Length",
									"value": "0"
								},
								{
									"key": "Date",
									"value": "Fri, 07 Apr 2023 15:04:06 GMT"
								}
							],
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "Delete Account by Username",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{BearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/users/account/test@marcoshssilva.com.br/delete",
							"host": [
								"{{host}}"
							],
							"path": [
								"users",
								"account",
								"test@marcoshssilva.com.br",
								"delete"
							]
						}
					},
					"response": [
						{
							"name": "HTTP 404 NOT FOUND - Account doesn't exists",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{host}}/users/account/test@mhpasswordmanager.com/delete",
									"host": [
										"{{host}}"
									],
									"path": [
										"users",
										"account",
										"test@mhpasswordmanager.com",
										"delete"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Length",
									"value": "0"
								},
								{
									"key": "Date",
									"value": "Fri, 07 Apr 2023 15:08:30 GMT"
								}
							],
							"cookie": [],
							"body": null
						},
						{
							"name": "HTTP 200 OK",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{host}}/users/account/test@marcoshssilva.com.br/delete",
									"host": [
										"{{host}}"
									],
									"path": [
										"users",
										"account",
										"test@marcoshssilva.com.br",
										"delete"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Length",
									"value": "0"
								},
								{
									"key": "Date",
									"value": "Fri, 07 Apr 2023 15:12:29 GMT"
								}
							],
							"cookie": [],
							"body": null
						}
					]
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "MHPasswordManager-Password-Service",
			"item": [
				{
					"name": "Register User in PasswordService",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"secret\": \"MyS7p3rS3cr3tK3y\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/passwords/account/register",
							"host": [
								"{{host}}"
							],
							"path": [
								"passwords",
								"account",
								"register"
							]
						}
					},
					"response": [
						{
							"name": "HTTP 200 OK - Registered User",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"secret\": \"MyS7p3rS3cr3tK3y\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/passwords/account/register",
									"host": [
										"{{host}}"
									],
									"path": [
										"passwords",
										"account",
										"register"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "transfer-encoding",
									"value": "chunked"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Date",
									"value": "Wed, 03 May 2023 02:18:51 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"email\": \"me@marcoshssilva.com.br\",\n    \"recoveryCodes\": [\n        \"c10bd559-d8d6-4ab3-ae69-2cc7d205c93b-2\",\n        \"5a8fd703-4ef6-4c68-83fc-8609c6502300-0\",\n        \"3a2601dd-d5f3-4d47-b27d-4ab126c1a179-4\",\n        \"47d4b175-87f1-40ed-a666-a9f6ffc7eb37-3\",\n        \"95772d6c-6c93-41d4-b1a9-1bd13cdf9e0a-1\",\n        \"fdf7ca7d-2a6e-44c3-904f-12c1aabd34df-8\",\n        \"cf83eb27-96cf-43a5-9cba-d7581b0d6ef9-5\",\n        \"d4bc7ae1-5acf-4eb7-9c81-f80a58ddd299-6\",\n        \"5c64132e-226b-422f-91cf-72f86ccac2ac-7\",\n        \"6c07411e-11c9-4553-a924-7f5c807a7384-9\"\n    ]\n}"
						}
					]
				},
				{
					"name": "Get User in PasswordService",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/passwords/account/data",
							"host": [
								"{{host}}"
							],
							"path": [
								"passwords",
								"account",
								"data"
							]
						}
					},
					"response": [
						{
							"name": "HTTP 200 OK - UserRegistration Data",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/passwords/account/data",
									"host": [
										"{{host}}"
									],
									"path": [
										"passwords",
										"account",
										"data"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "transfer-encoding",
									"value": "chunked"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Date",
									"value": "Wed, 03 May 2023 02:46:18 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"uuid\": \"9df61f6d-f036-400a-a851-11218df91fad\",\n    \"keys\": {\n        \"recover-9\": \"o1ebPD5SSvWealW5vwllPLOP+fMdrCysABnO6Nlr0Or9gJqqEh2Gu46SH9rDAEyErlSLQ2Qtlv9ApH2AaJcZELTRBzy9OBk1AOozeujg6Z9hokFtnr6YEbphYi/Qi4FoFvgU1WYBhJieszu2f9I9xp4v1d1YzOmTYYDPa562+pxf3AwNMpJ55OypOQXbZZWkLs42smL32fFtqXW+/pA7TpBWQ19fBaTl/DaMcDk7VuIWMC/25czmjScLHKean5mSM/kaBmohG0X7x9WhoUl36Tcr4uC7LrKlv7F1XmcN7B7cMXADsvxs93jrzidRzQVUxv4/3UDEcz79Lsk3D1gsJQEkO4FDmLl7FEJMB5zxGlqf15crWN6dwitDcqiFvCPvSnm2QzDBLElapQeoop1h3sxqkg5xZtiIFH2sSvI6sWKmRqzJR5G9MeObUSv4IpxfqKzzOnvndrAeJdhQPDL8USWsfjjYsTToTgRFJEqIXCo4KRcOtw12EArHvPPTDn1V/uzLmcLW6z99tAT+ibzk8xPI2jgW7GzS4KFclwSNbylu4ECD8DGp8HoMmvVt91rqlq405pH0X2HJeEQWekmBTtwZa08wtJ3yO1S+nAHwn76c4f+H2uSf+b6umP62u7+oZjzKHG1ub3bY/eCAzaXHeykN0o0oKeXTI7h59ziOGglTFj4Re998dvaxPOPj6pREz7KGeeIceJBoUpQZvRtd+As4T1/x2ytTN60H9abstgY8lShMPtKBaah9EJ6vKk/46/cUXa7sZs2adWGififJAGcyUnU+1izQ2FYNZ1XqMZTpjdi4pvRf/bg6mYo/NmYA/ICuLp/UiZE5gjoi4Ot3ZuI7vPQBsZk70qWGwgJ5yvyfIE/2P6S/MB4StsxFadnwBgTN7/M7i3NO9KJPLmWepUEUzzbY9+oVMfjTESETTVaCqVBydAhSanjrO7A/i5HIS3a1jkcJ1BxrJbRcX8cnTWv8lHl7Km+oOoGfLhgC7f9t7sNp3j3Dp8irXZVc1/hcPodTGux4il5Z8DVaHtGfG9ioh54CY102vccxlbsKMcfKwXZ2dbdBi5ffQMfBkIexRPcQQAijuk5Fz20+NSEOtN3lPxEKwc0cKicbMcbHlaFPl75pU3Uv8htXRjTWAbkuqQaIz7qIEYydFc9N+Nid7Xv0PZO/zY01AlkHbm8k5M6oXuOhE9vc/wRoXgr7U9/FeVvgRtvGKdtzEsMFnMCbnmbgvON7rgrLF3d/IThUKc7aF+LIoJhJaiNL09RrJoo4X7Gn+Gb12NGfHc/ZkIJb8uRkJF5oy6ZdAtQxb29cpY1YXv+1uwNXb2sqRq4J1eWpcUauDK6ejb9biUD+YZZCHUkhIzFEkye8Oh+rfls8XQRzMsmALUhYT3zf/JEj6ACDHUomi38tmn2Q58Vem0KHaiTudKKgq4hSrIeXYME310NHoHcExc82X2TEXJAKuaU6TyW5cWldxqV8ewM9o5RZXrOe3jReNSthOBQY3G+u108EU7Mrdqa3Yy0HztwxpH4D0GP9opcIFITqCsNiTfnGg0xvqlJhmaVZ7mcrEchFghw8DNuNid0rOXMT/btTJ1jrSvfJwdncM5Ql1qkNoEdPKGNxxOyADAVYQ2vtQ3VOTmo=\",\n        \"recover-0\": \"hvF00cRh5QbL/8+pPHsDwoTOpC0lOXvwN/L/VMzgO/thqnLy+sd4WwsTiMZPiNtoKZmyJtafeJpqFWWm9el+omK3P9UWG9yQp9MQJtmvdOLV5ara0HrE8O6xOJSv++o+9+2nfOpB7k4MCILi2ovm9dHHRCj4msHBQ9mgMktUEA5MAjf6mRuvLT52cyK55vUDmnOp9/p7CMg11X7hyBA6ZUuDrM9oLFWyh1rO5RasMNvSCtl/MCyvQ2GttaCpk3jYZX2b/8GDacsF6ZouC1hZvSETKoxdCNM1Qs6jg0Gp/2ACrdJVdLJ98LmkCTOI9cy9YqLXY39CaBM3hFPs7lcurNLIfqPhIx9bLcSUcvZpuKfe3iTrx+HbgZ3cK0JcM1q/hPaq07Qx07YsabeWE7asOyd9thXkG545lpK5mgYbv0ryfZ9gnL1d+FbRX7DxEc9rIgTZU1A+yp0EeP0MyeEnDw93Z8jnOWsI8ZLo1p5XL2C3ZfJtBdHls24dYQcRuu/Sb4Kc42wrFo0No6lU47S78HcZH/vbXPIR3DioODYRjWMblvPNtXh9TDLQU64tJW+WhbhGU1lSe0CTqm7UyaHnuHnfCcvlzseGba1NUk/nnWU5ncGblExwM1/CuwJu4Yp3YXFOY39yTNrJvNZw7anZMQDSWoewqffEQXCMLQnbIVA/j7EZ2zPfRdLxzrBixHeFa88nn9ROXbtgQoVIt+eMRnsbRn90tUu5vjLsfiQpT6rLXy1x7hKn2GotU3gNoxjgfOfB0pq/XTCbnVMxB6AtwwnAGXAY+d+Hjw0GmbB7ShXEG9GEBQtMu4wJJUvInisWz4k26p62U1Kiv0OkHQ72JeLw8UK5rP+yz0gIha/NmCvcLmkHFcF09RLkPlZi5XioC5RpSVj3C5Yaw6Au6UcYm3yYS4mmuOuukQi4Q2XThMDCUM2nEVFrkAYHBl2x8Wim3N+GI/jM/xVr28r8RymdobYW0+K5MXzFaxs35wtZQV+YHHJDbCfTQKK3slaFazRsOA6Updl34ZLlvqTeuBZgBBqYGqPTHVtjaybiMyHK2X/qPzjwqttknqVJeWTXeOpFX5v0nV0PlQ0r6Ce0BhLvzKeHntqjwMYfdQaPwqX1JtVrcEOOjoEiaO/rLp9V7kuhfcpH8ZX0HCcPAhNan47MVu60VIjd7mBXK09dP2++BpfVSzD+0RrLnv/yhyOzcubz42HefmTx9TpnOaTg9VOkJgBROB5BFVeJusBV+ESrX0/mYTB3hbo6xe8Lp8bZ8q39Q+9y50S6MB1pVQgc9VKjRkmCpap3eTdEvHt+kMglZIByYJPy6pxp5vVdhvG3MQZ03Atyn9zwrREfzZiTQm33uLSz5nc4wpkeJscsPg9Ku0bDuSeUDMIKQMNnvWPbIrfvEzLR3Sg0KStl7Z/jsFjzDAiIuds2z+HWc5E8+KDZPkz4sMCd5/XoSmRflpCEyO8Kt8fspqAuwPRrEDsGI7Skv+E7bIDCAygpfxm64ac5K7mpVzyor/YxVBkQQ24MAbYw6gXLgA94TfLJmz0KWROBL5ClR/N0TnnlYw4HOpW7gPxHI9QQFEfbftypbqm7ENc11qNQY3d3fAGaFEI7LeWuDixBX8kEXEUDQkzz2COiZ+Q=\",\n        \"recover-2\": \"yAog8U3fj9VNKThUzHFnhPXOgiD77khIWRf/ILT54w28qQTQilYIY8bKUa/x5mHxp/42ZAPDoYQkf/ZRypb30/PYcXw1+qtHS/be/1InZ7sIjuPIYA0mDrAW+x0AJs0U9DKDWD7MSmjSJYMWqssgjSzOmNTY1MpgXfnJSsA9AjVgiHHp/8ZIrWP4GGAg/evrqCH3HEKpfuv93dqbHvTof24wY6M3v8qh5j71HAp4PW9KpdQv7xGpRjZrlfMfkdwahgx8PzJ6AwLvNLyNOpd46W4K+r7pOrdiYM/Ae3Npn4Vk2NS7SsccNg2ze+orSYJL7bIXQSJv0uYB67ZDjakwrbzBrMziaUtVDI6Qe/T+OWKZLLig3x6HVPefJuan43rLuENmmnl/jV2AQxaNaLNghtLyCbwHmxG+Z05gws8EjI4TgqdfCzKg0X7YWnf2/12s/Lng1IYQxMc3agZ1O1E5n+6jydkk/5oxSVDc/aqqSwxVP3NvLF32SxwC6dgsrAC2HSiZKBxWiP7v/QoSPqUE4G8K3BsfVMphrIpBQclykwTEclAKtzrfL9PjSOBDR9fW4qPuZJswWDmuEsvrswBivasdppxJi+2wLn4gDRUVsOHnXwwdCrKEzNI+8u/v2s1DpbQBg9k1HlX7sbSXyV57ps8LBm9LvgRJyyX6mFEPBliQ37/knmPmvG829GN5JtBoXZ+Rot+q/fjNzYqegaRY1Q4G5/AZ4/T0Leywfbon25/Z/bqWlUggRMu1PryjkKLN2OIyv0r6s01ZD2Gs07q+ZJX2g3oH4QQb8W49ggjPQFiCFeEvFfLYmnm3zZmtamA2eBumMywASo0zQIGmEQMsqlaVy4CkC7jtL/GnUNrEBOkfBP0dloMveRQSjGMIGek8EtE0hzMW81azdZvPo7w7TipmKgzOgOE+QDQz3e2B1X9XKeeBs9vnohdhLtEy8igDtf82SmDKOF6i2y4LrU9fXEE2gjdjZPvyQN0iEMolu6kaU6swoufn9SldSQEqSsPEY8in9igx7vUXJHJwpMVEImhcS58AnRByle1O6Xs4QFxogKdHrBy+8iR/8AbD3X/VUACz1lCDN74HzdPEBdoxS8rw8/s8AT5rMcSiVXQTrFNE33jb16UKzrO/Nfn4TBx5vrQqvSozxduuY4Z83Ri9s55iNfUZ8SUM6COV5VhXt3Muigs6ws6hLvA0pBYOGh/LD3SjkCu7JGreiTHNI3z9YH+QDytRv3ItERtQi4mA7gEPao9Pdw4DzLg79VUXyZuNwwindLwpJP3Xygy524+78wtTrqQxAaX1Gzkk8FCA+no6vh16S+bBqoJV3ULJglt9M6v+MyrHYCH7KH+dAEXGtzRG4QFsl4A5Zo0/Vgwa6Rbal0JFzbY45+t7WJsqpGT5XvPYluRqOOuzMV/JHs5XDqirNkFXvALVoSpFYIZnOY64WnM1PMhBoXsdfpUEqr//MGJC8qxlL4z2hurTSbXeBwzwk5fmWSlWc+RnzY3zPEOkrK55r4CO0XCTjNNp0raCLL+aPNEKt6QNXN5xGUHkoF3+1N+WTP/DH87u4F3wEoUBWJCiBcQ6Q+T6Juv+h2PZQJkaKJjuR1Q5RurLJjeQPWa8ruDBw50zBum3H2y7Des=\",\n        \"recover-1\": \"4xhsLhv2T0zdx5gRaAP9E7kZEhwXsq7MtSyTbc1bmxW4uPAh3cEODiPlXJgTvkVuLoHT57mCBReokAVMSBfqcCJ9Hmml/9T+kcnBChp5XiSVN5yhHAmDEq2CW6GRRYsn9IYfiojZjQ6wXc//pyBpaN27Hh6oN8GFV6H7pVcHwpT8BGe+1YCYSM976pLwWrzwJWP7AXYUJ+lvL6VsskoIL63r+Ey0gIHM68d3bapGdlWBicYJX8zifqisMsQm7yaL43KvmLfnGTgtRlCP1FIgvzqsTJbNjJ4WbYitDiWbYmt0BO9AEJoI1hrkzv/74PCAWLTYgh1wtTi1VtyKevFMSw7TSL9fz1QyY6ZmK7L0GmV3fJ3jtDresN5+E9MtFO5PyEzSW+DlFbm60fgccZqVS3vvS3GKYqMN/NaOEp8lgknSiKDMfkpzZXtLCVkPESI9Y6RVYh5Egj5PSZa63DC/NCbvxC0JuQumuiXz1j2wLC7PTyFRWbZWmm5XJ40The+7fzAob/Zt+f6+15040uN7ugPZkeXzLEFD85u+lav45AqyQszAY/drXNafF9/TjeyNREIBsfByEhGnaGU+m4G6tQudNbQKerTWTcGmeEiRvpn2SUHMBR4qSuKn9f1UKk/nD6i/rMFnJicWkXFJ1T1HURpJF/vaBVanUyAKYF3MxUf2TEPnjFxmezlflfTLHBBjpGjl/0HoKcr0M1lQwQh/IjEGlu2dOQoowDPM53azUTGyfNBG79TYnGVDiuk9WPx+rOTjPlAeD9H11LSOScPYTThoNVtkr6UjulEj65Vdt68VcivIqnRSFTTutFxnmJvcXb2G9+/Vm/XKtzRwNYgAjJHeADNX0ke1dm/9WCMcGzWf9vYwVaPEfdQ+/gSnwnOEN551vRDPnmWLzQn/PQYCeowaxnI9T/tzkyJwlSI3KTzctwMJJ3YPDuxIsuAG6i0YagGvv6xJx+X7BNs1Bckz5GPBm9tbhetSQSSEhSYruVFr0F16W5B/Qkgb1wDiaEKX9xdxPhYTqsPnJ3Hr4dXuaQup5xgPA/NwxTFsQj7XOrdrOVl+fXGn4x3qEgIRUj/BF+GfL2mBnE9E0JTaHDE71uWxE/SMKktoVVqzuNyyUdkRbqB7pFG2zb3iq0CnuSnkM94o10k537pQFqmGCSpYtC3+wHnKn7lnfqF7d75G16rf9cn8YwBl1I2eO6I3HAVswRCfimkk/eWClh0N0of1csnqquRAUwaBhkahtxb1mzcsccZX/Y6w2IzmhdLS8Eny1hB25DhenHRYitmz26Zq1UKLaNI3WwpF2rwf6CbeOPJ4KTYWy3K9EFI8Tqlbfr3mBGi5MOkMz/oDNfbddwYIxgeKwI2PPVlAAcX16fJ2HkYqW/4vKESr/x6ZwZw9+rXAO7i7q/ymOasKlPVVWybOY1MKwY3BZCWrnAPRlPtf5ZkhFKstKxSp05vFW4Yo6kU8ffFY8i2Nt0igdxl88hf6D7M00NtXpdAz7OhuMZ99SJ7EOAQ30mN7omZLZXmfe37hwKh+AAiT7yTaExCAgOKs3NY3J8fkA6Dra78mfuSFvIDC4mMszt08veynvtL/IPooBU3MHB7OHF+IfjDFWrC+cqBKpwxfwlcG6ZujIYfg6Nc=\",\n        \"recover-4\": \"Hu4F3hLI24Z9QrYjE6emKSCQ3HOA+sqofSNrNSbmWvaRMsuz1M/5CxPhG8syS1sOThmFmL7cX5xU1jkEdwddzLcopxZ3kUXcOklkHzd3DaaG0B6xeqsfnKHWrYIcAAhud4V5qAONmMniHV4A9e5FvV/GnivbDvcCnzY/FRh0RLumXAXe7uvedp3h/FDqhrDUuFaWIAg35lQmc+MtemHlGlbwSyBigurplCYfRhxlQkMuqOWk9kOAP54lN+NtrDNaK1OvVpk3W9pYwOJ3PnltOkKssw0CqIhnG7IBQ7T58f4u4ihAPWXG1BCcOfyC8eiyjvw+ighFVYGoNaHg4K/gg4SBKCBtMtyanq4USyyECSVEb5kHkd5QNSj5lVARsgl9ywcauA8In6QVAPiscyVq1LbNq4eI+neI8aZAmo2PepIMM4bQyVnlp9oC4XMi916EO89eOpI5HKp/ksyxYSSgQPg+AwHyaFQ7UJGjJVxabMroC14ovTa0gnawzYgiEeUC3Vr2TqDKZgICxu7qwN3mQcirzb/Xgy2zDIcfIZScu2lggmH2oYk3j1J+SU3c2O4LJqvLbhpwydE8+Avlw3uGvtFWpN3vNEFZm7FeetjgvP6QPtsOXWNn+GaOs1rc7zb1pBZi6t8CMKsJBVrc1QT/x+hKfD8Bgcq+epEweP23ksokDiCCXgpv001fDBB9aJ+mL4tA0R6u/SDEtnL4QUnfywzdr/zR2a5Cx4tRDMMFqJK1vhfaVDDU7Ri4xPNjwWt5rNL6clzL54cK1tuEpdEg70oHLQM0FYDIcJSwmYi/GHdG3M4d/uVa7o9R2j/WNzim2eJ4SrszVsxHLCAesdDpEyhKlfZ8JFFUzuCosK8asxRN+a/KkX6curWeuJpWjSxoG3pmQSAgPXL8G8OvVV464rhcTs7nwIkRkrCOg6XcuIoLNyhJtkRr1pGdpcTBTQlXaF1e7KbvyTgl60Rl60wQ/rWsckcZgleGyOKYls3AGvintwd38X637rF3DtpKwlv+veqyMxKxHkJymBleQt45QgSBNJm/dsnejeglEqP3QlKcSi2RtQTJNMT6x39Kn8ZgryolsEVGojTAlHCog147VeVIBGIDOK6wbgdXQle4fkdt1Ign7kycMDNWvb/8Pd8gXbnvANOqSW+yRIQuj4lPhCwOD4OHqFK5ReiYhwlPi+/CxCCMFHAN9jXo9ymeoze116kelq531guHk6PaZ6xw8uyzvKz9G3GTPeiNshxHxpQXRMU7PwrpGNdnbUYS6VMyR0NEOfvbJwxDpiNYwVXXQkHM4/4+Malm/VafyYkLJKeZHDKfK0xWYicKEcZCADEl3N8Xz1V/GlTe4HytoKqeQ/sbxxBETh/SdIBtE/I9U83WPWBAgvKTo6V5fuFbenKxEQ+OThdbCOeDgKWVdVe2CGIcU/OhXhFqszaX8apwaJ5BojVXC1+jqxyQog5NrLjf6LK0zdrkxEQ3tP5PZ17FV21t9lD+7DkIYcNU+1wpcGsGo3vibDQ3xMcwTPS3NGyFzn+67xl0yAAH6qzzOzhSo9zMWWYkh6Mri3IJ5LRxMc0BvyD6p2iu2JvB1a2uEFEEHrlTdvMq07NPB6Q3Ud0UES228vGpiKJV05yo2jEpmKs=\",\n        \"recover-3\": \"+SSZs53l6oeVYvTX8gldTKS4OW9sDCwQexuplDoKz74kUYqUZWhiO8w1VEd4Hz7rsXpk+uf7glqrsTQbxvSt4sslIQhYJp+5DBVCrNv4F8OV3hHBF3g7/+wIdbZUcOsGEAIKJcyMO4bSNu6WDamCzHqGppsn/sOnKhc4RxcrbExqIkJ8XzUl82wBpVUeMB2bbMWJtKp508EXDrng06ylWqOls1+vu9cSBp8nYUY+ErDs35ittEtKspL6pxi/BUygHTEDW2imSGjzc/fvB71H+LKb+cUmgRXCOZRPbHX56dv0UY3A1kHmWtKlIkxOjRTAVyKtCBbNkhFyoD4JEE2k+g7pvP678jd+fmZhJwQZNmucTidXW0VGkeuEdoTZRlVv3uiW5fVfUhMKmwW6TiB+odtjk1RBF/1oKpgaw1zGK5ODliPnx/HnJTwDVrOpM03yBY8FjBhExRSxOm4frh8NuvA8eNdEIWMAzjfiyrEYhe33r6M6qhyovqBCqxUCtbReY49GmC4ZBQxCuRD56ZofGybgIOTM361H4TuKFA5Z61FPTJI/8BaxBFHL18dckdy+eTk1E8rCwWHt+33D7J6xUlya35z+iLxLqNLWW/76FgfEPkdfok1nn/fJfP9U5Z1Hl72o1xCHZcmUjkUuPpHtO2+9My9Y5qd1nxSWww1S8OTdTpvzuulgZTnLGdnAe4YYLbIBjQJ42bWtFkmgwSboNjlnWJMB9h4gp7DxdJpdE8FxbgCp4azLcU8/VLsvUzoOLBD3/1Q07Wa5YbWW5eMv2e8HlRcA/MoOlTR/PqqbFaysgVT/vVilRZkv+soFp3ptAgmGSM1/ziw3xGojxUPXlBNaKq1qwX+pxPKoWUkkhjqq5QHx1vjZr9W2JwmlaevN4x9xVwPSB3W63SIWhltuycEiKliq9jU+xYW5OzkvYr4HRyqvVrWFACyTlfNdSWmHoPR2HzojSOpX/aY8fyAqFYv+PWKMDy4fE/srNZ5896C5+l868K70/QVpJl/siiAieOsbEbCisgwCReadxQPCLTjgvoMQUHfMRT9ES4t4+Yr7cxpm5iYaaGOnqXPfTTtmfwbabHTxE/OMTHTI5mqfqm8YARorB459+JQn9Wt+0QYJYXUq6or/F2NxuFVmVH/Gf0JstGnr9fKEsMs7PHJ0Ae5LYIHn3PZSAYMa2PZlgyCz72wUvFUu18cBXfNk7EZv/33HXkXmTtrJ3DYk//BCujY1OdVPbkcSuArHBVfDiBj5mBQzopJLRuvJWH84rtR24x6WlAWbCfpOogbNRPrSQZMbkUWaw1U40GyTWBlcyXzhr10aWhJPuYvT8YsMagYCjxfgzdN1618lforWAbzA7NL2SlqQ8c37SXvRbyJPsDUdnMPP+aYl6DgiWh1YHsSYwWuwLqdfPH4DZmBMh3VjkjCer7Bn6qK/NJbebPjXymSmA9nIfp0OEFRjpJcXOhticM8c8eXssNwisAHWb8PzDWtVbKpZOaIH1x3gvMrkg+LdTHBHuYSSTnzGgr5vYMfcSgzdGcxyqp0nxoxeom8S+tqAGSfMnkC9/Zs/o6p9Act+07wqzm4T/3dZ5a13FeLB2qQvxfUdV2ItOD7rPRtA0ndNHb48bUv1bAOOiDTZqV4=\",\n        \"encrypted-default\": \"MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAxnZCOhb7h6vk7EvN1Tad1o4fDuhvZGwRI98P1HbQkY/NDRwzmF+Q7Lz31Ij4+qExgzg2nGVRfA6hIbo0V4g8Y3k7FFkSZubfhxoDI6SAdjLfaaHzD0LTG/5Zb3xZUHODX8YBzuZDovTNvgRlxjLpz4jYgY1O4EPaeferNrBzzf3juu29I71fnb2exiYKLJbSGwmOZtvv2T7kn5G7fcK7Xa1uv/esC+huhGl9sd+sFf4FqY5KqFw6L0HL9H0b4BbnEtQS/Y6or91F2nirXJsYqddv5hqPu7JGNC0CNCPuovCxgUcpJ8oB4dKOCOCmn+XBBzja/YSHRcAl6kVjgqhSZwIDAQAB\",\n        \"recover-6\": \"3NU/HibyApnYWyOQCbmCOC9gc0L1AHe/48i+IJRvXrsHK5U8k+jVa3nDPh+2xbk7NOkcNSI02hTkiLxJJSi1KChhjdsjJIA2U4XGLaKI9V2KCdvu2cALunvZc+F01TSfmMwyMzaJ4Izn8QawM6lY4g0JPmFx7RgIdaITChcGCHO9ltDxffyrBUXTTWDcDecf0Gbb6Dte/WR2Vp9e8N6YjQHtuYu1rDv+iP5Kgvj5dR/rwVPqlsEdhybCckIb7sLwfuPaNiEZA+rKIXS1VPwqQREAuT6aqjff4zCYRAbQT0AjR0TWA8x7IlAKca8vu78s541YkcqsbwD3VDv/e9Lw56uvdX1Sc0La6xTj4grJOi1XB7Z/WDyWCZhdfe87Q6H7euCRGvGLZgl1E+kUfb0pzc+Lshl9dskIAWB7puijnK43LcMi2EeRL3SP4bnxY1ae8rGwghWiLzgTgsK6ob3vaUNCDjfbW3vRJnf2IrmcWHQgD61Rrctlx2UoBrFhBDwG0a2LHXbWsCO0nRsLFPR9iVDIxiHBR3YhiiTvhwZ6mZrpMGdgxEt0e8I9XOoGkzfEbTAUFDNPye1wG1zH7GUGC+zHe1/RKLG9kzPGWWes/kfPqbFti2FkbOqFGvRwi0+5w9WXV6Gfo9bsw0sm6QY8qgnYKdz2ub7Sb4w1oShrfjuc/7KnSGXip7VYFE2r2NjSBk8CUnbf20ZQlWMu+4bMwT4E3Lwjhbsv7g41Voh6DPEdkURxIu3iFMVz6nCuVElT5T6TPcqEFFub953wB8R3eoA8+LdOXaB7zhDeuV0hDqUqHcKJyFGjOqFqysN4+2DyAGIJcsYQcaR/ACu54Sb68+TzC9US7hoLhj7libK9qYqEX8R5zIGBJZPbXwuZqLboNzgCKZkzPYoO7xR5Z9Bu/DmkjBWGsJHzoNQ5rUCdMaP1HXueoSK5SZ+CSTxqWcwzLZVRvfYrleEbfKn2C1Wmi261xK9jxF96KOyGHQgoMZW6FhF/CrDsKaG3lha57rNRQ0HJsUWXGicjijmphcvC6fQSKhX7DYyySyEJPQDZzmujY00GOqz6Rue1EpQc/e8mNq+3gkep4aIKPz9kLwNbqvg75X6O6NFVK7gKSz+/mHBmPzVV5KdRFF+vjfJW1k2ajYgdE6Si5n+wvkchmoces7SU5ByNRV8yFeZjmoht1kFaK7emXgX7RzMgLAMWRWbi6nLYpENMQ4zmtKueyZNZcuEhufeI9QV06w/0AkI4jiYuah/JH7qDMMylxjL0TZ2XIl3D80kk4mrx1y5S7dA/e26Sb/77sZMQRTAWLFoVWAsCmZuqqtPfXYr0x6Q1cBUTV8DKlKoMGcbVf/DZra1YD52nAgbtH5DpfZg+nBYgtXAHd0lFjK5pVcJ61ELxbC2XonBc0v1QaPTecc5UhiQDWPJL/NAK7BKxn4E4hvH9HmOQCu65wad/eDtwbj0wCSrXMm8D9xGnD9w09Jy3FbxmDLjmY89JvsAPcbtjxipTGZV7+NTMMyJud6gn/qMRa7HTWsPUHuG8mehm6PeMtZpqVzN+P3CKvepyhYc5jGr0aMdxVs7+wfnBq5JmHfPoxg7LrOgwlLic+WmYEs+IaomAumhJ2XmBuTNjRqJb+OVDjgc=\",\n        \"recover-5\": \"X8V92iLWrHcOUAygA9FS83mOlddYHkqyuYWV4VkFXeZzZMRVTgDQAV7eT5p2VOJWNayQEL+VLmYAwLCoUgluM5gOkUf6I4Cfd91ITzz67fsBV9ex3up+R0wmM54KoYJcLgZPKU4+MfKcGOwUjOT+btBU+JWfnxRUC87ZEi0qVtYzLjhDktIIPG407S1rggRptlMunniFXPhc+CXanOUaOtpvPBL4PM3QLdmTPgCOuqHwQ3gKfX4KE0dTKoUCSrc6xv3Vy4v9YNhgmcOC7/axM85TW/nPSDFCfNvNfzMQ3JXH7pDQJ83KU2gehiee0B0Ecabfe4gsCuP/J13fh+otZarlmJO9kcW/Za8ZwS3oISGL/VzTKqU3/fBecz4uWkT73PGdz/sqCmGVNBT+u/afmWgsqlgRtZZCj2qHcLGMAdH8gtzsB9aBpjjYKOCTt4iB7BnRy5gS6Gv5Hl7q/ESN1aw7768yY3b5uknAlSq4bQ00Zg4VObXhwTkFfSq0h0ih4qudk9rlYxhFFSWYG/T4dLmE+FfySV7N7PZ25WMbV+HshGhADwI6eiHeVwHuE04ZK+wBr6L/QPUzvXWvB5kFvoFxHKajtpT6dODq6J7oBOEcKPayafGf++DKRskapULT1qtSE7hrkVkr8F05MyKoalL06VA9iQ6xnzBK6tTUpJ8hAOvEk1KijyB4AoX9nbyGkfQgDl/wgouvkKRtcb3TZKiJ04GNxCGymcPAqHKna72U9I0qYi46k0o6ITPqjE5a2bln6iMMDwe6Us81Y8wzKmpTLO35b7T6mw0GGIEGi7C/8/yQALdbb7DtBHJDi8kGpRB9FwaDbDheV/Od14+EL6QEBqvd4ZXEdlmJ4Gmes6sas4AoW7xSINovPhcGjxnQk1IMxn7URH0BAaOYSXM93ca7YdnLLOQjgTIGNkyGfb2fUWSkenay22sUrTwOLAHX7IeZLJr2ek4e8HJrQkc8MVPFF/oiqsxrNcWRnkExuw+C1k+pOYPw1ZP7r4GAllz3+iMX0YLtP+97Z2dxZwNJvdfIJXbWhu66VWNdXAlvTYtdY1VgIejS+svpDbTZ4Ypv3apv6YISeq4YjKNUr41yYRQ3Su3RC7rOyXhQ+URsEbM1vog1WnTWsqEA+0onGcpAbGZHFVg4gMCcsd0hSVStxBbK6eWUCNqIfB8tHGc4Z+6EUPE7bxnxk/+rK0Akm9j/qCa6XQu/ZjKtg3fPXHCT4LPwfj4NMVYQmnkFZ3S9C+cDFnbHPpp1IkoV0bYEC9NDrbKv0mcLoXcz2CEUfjLB+j04eLoDor0bSbNAg3KoudNRK9Wzmrd/yFYefdLwrIhM+/yzKAG+AVRosEk2scGPC5lQSc5dSiBJ3e/6qjday/d5MQX9N14EbObkLFs3vKoXy2c+tXK4FUtUof1A7bu61yi2yvqmj51UuBfZ3JDnzaJ0Ou8mAeTufLaLODQLLHe+bx34j8E51dHgpZlFtiwn/319Pl5b6Pb2Dd5xpy3lz88G1Evuy08eQSjCNKc942l+BkkYuCFk4h2+FThVSaiSaHSjfof/Q5SWa3qqwN6MeXmC2wb1idTzxhIicxKPmcSQYMeBdlqQUdEdbrjQka9Vpg1WmdzE5A7snX8k7QqzpVM=\",\n        \"recover-8\": \"JIAdDuGxn7PjYKb5nLbnsHBuc0YNtMQ58/Q8m6b/j2JmfmUTMJQ7PPMdBTe4HumRyirUhexgqU2ek/vO28JgpgadlCgCBt1SW2/g5n8X42DK3SylU1paA3M5+bJ9CkzEAj1HcNVKWLd63fFQbdvXt0IFx5xqQY8hnVF8rH7kzpz7fZNh7YG1YQtgr8q68+ZD/Yazga/tN+0OucvyCaBPqF1UgdBiW3mgR1Kv5a40IuX11nDzeE5ijJH2l97Xz0oo+WmZFKZ2bLItt5M9WL51Qlx0IDZlzj+cfQBfn8TvB7r9XG57L95wlBbPtFgf4Vnld5hQ+/8w3wgb2PemSZlRtqVXP0bNJDx9Dpk6Dj3TM0n251HomMOwKBeLmk4Zs0mlqE1Ytf0aclYyEeY0lLwyJ30X+pPPMnU5iylp4v8H+W1csfPuCNHKlYgTLpineVQPlZLKV/VGswp0WFnkDJGWkLXeRw3luxQGnQwrRNDg8i1q0M9wrJmvFhzMulBWidG18JoPPjmx08sp8oZcbRuTpjoMENnvtlec4DNEYWBe21xkBeZ+QZs9EIdos0JkRdKa90Ts4uJtfPJBIj2tsGoZp0CC/C96h8HtvM0YAi3CrsNGbhd9b9gQxA7Yq074NKhby/buVi5/HNoi6D8OAJlSMKNTS1FrQJTzGyJsrs+pRBKC6TnlCtAYTic9AADO7NInbHhK4HuPem8mEtfnxk8Iut8U8buAQ68RXUk4AhI7nkPUu0vnCK7tqKfaW3Aq7BViZ/9Rumg5cXgCod1Njwj+cyHveOMzhV5yl8B4NA3O78O2AK3+Hn/jDyqPafa7NtHLH5G0u5OBmESYVt4FVSl8kGKbUVn1YaLTBb1NiqGUxa4HTXE6jhsoWxKvspLtsRxKmrXQgudaCVjIA0H/B2NXTZeaXFXVY/UCuZDVXTQ2brQ5ZHNEApYJEI2HTUWzP5I3THCxKnVd9OzIJWamPnuw6TB3T4xPcOKhJW9blbwwa2JROETnQ2BVS2UKnzxzEPkQti4fym0FsJAAPDrO/4m7ohcSDLhM19f4h3EghAFsSCW4l+fz0j2XbPqjBHqRRljrYTvr16Bgm/2uyjuWQnfhBQsA6w6zTcgsnhfijesFZnJvdrTRyuAVTd4Uza7Gyxx+egpQmB+t2U/Y6jGlVE4dmpxrWerGeIwBiy3ug/dZWCsprFfmQj8srW2MmqJmMZnHJecBQbHWYqTDfm9gi3Fd/jACuyZ/D9YqeTlmGMJUrddIuDXYkOebKxOApFByVlgriJwNzG/9xeWs4JBI78gZDpmSZASyvCcSoSA6iWzGFahe1PWMY3ZggscnccJRVhEiwpvvYU83P2FZ68Un4dW3zGHWCFiZ9NQhB1aBsliW4Ok4U/9VeFUIpnxIbfTcUkwdrArWdsr8pe2mohvYc8S4pY/eu1+ChjaRlOrDfK1j3FAKU8WGdm15W4e0AFf8AaPCQF5SbN+It1s/GVBxmrQRbpyCpH+Ln25L19DiCg5/LkmmWruWmmpETrO5r59EZRiOFVqeOAIt6ROj6TrJwiyIE1jS/lV+JZIFfnMATNWfKjIShhRnAWa1VVbVX1/BUgxa66AyRHCFF1vs1fcsfXhFjn038gVPhKDWdcdQqKJNFfQ=\",\n        \"recover-7\": \"auh4j9ek47Pvc6f+628/EAmatP99YsPjZgX2OwAFrIorGsv4k9vF+YzuTJvKOiU6Z4dJSE88ugLE7DYnx5F37BlQNiLJGQqlJxITGBqU7fgwW2Nb+4hpmBf/4DrnZgiuhmHjqzLULwZ5jkMHhSfERP+mKQI0G56qLvuNXZewbKscErB4777JeBSBwWKtpjcMeQdmKF0aRim48uUf3HPnE7CItW4ETcG7tRz8sxVv3YyKatfDiOpI6YYmC3IY3JG+/26NoEO7a9DwkoPOLfiJCVPFhFBzWPp/NE84z+/3PV3snrFh1amxOAYUbvjvL8hFns4JIveaoyac+YbQakkkK8MkggkkdyvV2QNFkTlzae0CndX89xvSWpSoWWWUDHGiPcyrcHfHFmZ3tJnkcp/mZbQGqAS5WsrECUadGoBfDOmoCehAHyL58pP52vpXnrBDJ/RKwIGBP8WRS3OlHWuy8q0R8KI4kAf8Bw+5JFz5ifV2iP2S5CPdgyqN+jsVYPGj3mz3+k8cxidq1J8DgrGwes540skF1ndlePX8ZLCu1aUUmapJb7a4iy/HYnATRrTX/htX55AmqdHHiZKdcoJucvEsu2P2GYXf4P2y/I/r/bAvY9CuSvvxPQ76mTqh0jrZJvRtKdw52IZ2HTWi4p8D94BV/3bA6Wo3AJpsp0eciQhx1K1Mwa5mPkJriVDOdevnC5ij/jZf8PbtI5uEJJVrQ8vKvKPYevZAC0lIlbRCcFOgsADkiXFsNiHQdbFH+bIhOm8GCZHmAlzXdbEAAW4ns/r3XEhGeihxgZRuW4ViPSh5DkpimGtcUaoX2cabV60bR3GxzGv1/3MW+egrUKbAm4cRqVsMT2lkx0jOaguaw/WHjcr9NtY3o+olJUfbKK/Q9K41FUjVj0yh63AjQVfw1q0JnkoLed14Vi7f9VQlhJCuMaYbXqP1fuGHZE9Rb4k1/5SCjVuix3wpGK06Qe9yT5UGszyWYSLguIVtKtfPDVda/ls53rUgoz7H6PAwcSRDGSkh2eKx+kzwoZiQ+Y7mtT9fecYdFipeTw0zFNoyyBI52+w9Xcam4i7wjs34EbrVkH66EbRn4kO+NPBKMMV5/55hXWPL//MYWqyY4Pu/8J7y/NWkiLedQf4wKcQXiRRjxdWT8hOMeP6c5zL1UOXBVm9TNVuXndbOu9AWJgKLcnW1KytZ8RF1/v3NFfHNE+culyrkaJEtvrzG/ZpJY9iw6Qe9u8T8xzzT1kW+UgoCm/mbe7CLhv0VvMf04wJvjy3LbVpZCeS66Bo7ILqLryWu+q/S95LUJboF1Y0LJxv+Y3ODtUVUVQqyUPyigc0lWoO9ldybWZTZchFa0gw//U3qAqcRbsrw78opn2bP/H8w+G36kmAAmkX6RFJCEOA9JUHLeYT64T5AhZXh+Aj5nnVwrwP5B8ZWTgkN5M5Dn3Q4oaEbshmz1hDwlAxPb1WdU9xJfIQ5Q1mQYjucZUQxAyoSXPEq16h2nitfTNExwcFngjDvcQmyjse5WarpqhTWJDeonk+W5WJtvQHxHVvV+xCsNAbJR41hC51XWnr27Mq4HH+33SVwXWugi0w54g2daWJ2Ls9za7EaENBRxOZYm4il1fXTQFrsVcAma9zWwtnqP2w=\"\n    },\n    \"keyAlg\": \"AES/CBC/PKCS5Padding\",\n    \"created_at\": 1683080331378,\n    \"last_update\": 1683080331378\n}"
						}
					]
				}
			]
		}
	],
	"auth": {
		"type": "oauth2",
		"oauth2": [
			{
				"key": "scope",
				"value": "user:canSelfRead user:canSelfWrite user:canSelfDelete openid profile email",
				"type": "string"
			},
			{
				"key": "grant_type",
				"value": "authorization_code",
				"type": "string"
			},
			{
				"key": "useBrowser",
				"value": true,
				"type": "boolean"
			},
			{
				"key": "tokenType",
				"value": "Bearer",
				"type": "string"
			},
			{
				"key": "accessToken",
				"value": "eyJraWQiOiJkZWQ5YWUwZS1lZjM3LTRmMTgtOTdiYi04YjNlNWU0MzAzN2YiLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiJqb2huZG9lQGVtYWlsLmNvbSIsImF1ZCI6IjkyYTY3MDkxLTQyNjQtNGNlNC04ZmNiLTNlYzZkYmZlZWExNiIsIm5iZiI6MTY3MTU3NDQyMSwic2NvcGUiOlsidXNlcjpjYW5TZWxmV3JpdGUiLCJ1c2VyOmNhblJlYWQiXSwiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDo5MDAwIiwiZXhwIjoxNjcxNTc1MzIxLCJpYXQiOjE2NzE1NzQ0MjF9.KdudZ_eQT1u8Pdc5015YWY_BBOqjIzeoloVzeWoxglYlS19smmoohPsnt26UWU7oBiDuLpbkb6uSTAzA9zzmvaaYQo5yai2-R_x1SWQ-LkaKAOQAagIWrORcdwFQsjPsgTlRA9gSJkoy7AfOBBkMvjsSBwXDZTXI5co-5bWDaaDX9WymsZc323BrZgQgXCB9HoyzF_Ch38Q8nAB5VIzQE-ojHWlTS3HLCvZ8UKDQpWbShMj76fmIc0rmk8Ab7B8aLzV6gXZsHXd7CgydgxEH8N3xi-P29j5_YgxRWeNzE0484ADfQ7c-jmGcrjCXCle67FjPYR4VY6pvW_zf5qx1NA",
				"type": "string"
			},
			{
				"key": "accessTokenUrl",
				"value": "{{AuthorizationServerURL}}/oauth2/token",
				"type": "string"
			},
			{
				"key": "authUrl",
				"value": "{{AuthorizationServerURL}}/oauth2/authorize",
				"type": "string"
			},
			{
				"key": "state",
				"value": "postman",
				"type": "string"
			},
			{
				"key": "clientSecret",
				"value": "{{AuthorizationCode-ClientSecret}}",
				"type": "string"
			},
			{
				"key": "clientId",
				"value": "{{AuthorizationCode-ClientId}}",
				"type": "string"
			},
			{
				"key": "redirect_uri",
				"value": "https://oidcdebugger.com/debug",
				"type": "string"
			},
			{
				"key": "tokenName",
				"value": "TokenFromAuthorizationCode",
				"type": "string"
			},
			{
				"key": "addTokenTo",
				"value": "header",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "host",
			"value": "http://127.0.0.1:12050",
			"type": "string"
		},
		{
			"key": "ClientCredentials-ClientId",
			"value": "MHPasswordManager-GlobalAdmin",
			"type": "string"
		},
		{
			"key": "ClientCredentials-ClientSecret",
			"value": "8e18ee56-ab7c-4ed9-b192-ff4472e5c697",
			"type": "string"
		},
		{
			"key": "AuthorizationCode-ClientId",
			"value": "MHPasswordManager",
			"type": "string"
		},
		{
			"key": "AuthorizationCode-ClientSecret",
			"value": "fd04f93e-5e4d-4f16-98ae-9247f68d8619",
			"type": "string"
		},
		{
			"key": "AuthorizationCode",
			"value": "",
			"type": "string"
		},
		{
			"key": "AuthorizationServerURL",
			"value": "http://127.0.0.1:12010",
			"type": "string"
		},
		{
			"key": "BearerToken",
			"value": ""
		},
		{
			"key": "RefreshToken",
			"value": "",
			"type": "default"
		},
		{
			"key": "ServiceRegistryURL",
			"value": "http://127.0.0.1:8761",
			"type": "default"
		},
		{
			"key": "ServiceRegistryExampleAppId",
			"value": "USER-SERVICE",
			"type": "default"
		},
		{
			"key": "ServiceRegistryExampleInstanceId",
			"value": "192.168.1.37:users:8000",
			"type": "default"
		}
	]
}