{
	"info": {
		"_postman_id": "7e25b572-f971-4038-a5c2-8956e09883a0",
		"name": "MHPasswordManager",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Service-Registry",
			"item": [
				{
					"name": "Actuator Endpoints",
					"item": [
						{
							"name": "Get Actuator All End-Points",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/eureka-service-registry/actuator",
									"host": [
										"{{host}}"
									],
									"path": [
										"eureka-service-registry",
										"actuator"
									]
								}
							},
							"response": [
								{
									"name": "HTTP 200 OK",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{host}}/eureka-service-registry/actuator",
											"host": [
												"{{host}}"
											],
											"path": [
												"eureka-service-registry",
												"actuator"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "transfer-encoding",
											"value": "chunked"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "Content-Type",
											"value": "application/vnd.spring-boot.actuator.v3+json"
										},
										{
											"key": "Date",
											"value": "Tue, 20 Dec 2022 21:28:03 GMT"
										}
									],
									"cookie": [],
									"body": "{\n    \"_links\": {\n        \"self\": {\n            \"href\": \"http://192.168.1.37:8761/actuator\",\n            \"templated\": false\n        },\n        \"beans\": {\n            \"href\": \"http://192.168.1.37:8761/actuator/beans\",\n            \"templated\": false\n        },\n        \"caches-cache\": {\n            \"href\": \"http://192.168.1.37:8761/actuator/caches/{cache}\",\n            \"templated\": true\n        },\n        \"caches\": {\n            \"href\": \"http://192.168.1.37:8761/actuator/caches\",\n            \"templated\": false\n        },\n        \"health\": {\n            \"href\": \"http://192.168.1.37:8761/actuator/health\",\n            \"templated\": false\n        },\n        \"health-path\": {\n            \"href\": \"http://192.168.1.37:8761/actuator/health/{*path}\",\n            \"templated\": true\n        },\n        \"info\": {\n            \"href\": \"http://192.168.1.37:8761/actuator/info\",\n            \"templated\": false\n        },\n        \"conditions\": {\n            \"href\": \"http://192.168.1.37:8761/actuator/conditions\",\n            \"templated\": false\n        },\n        \"shutdown\": {\n            \"href\": \"http://192.168.1.37:8761/actuator/shutdown\",\n            \"templated\": false\n        },\n        \"configprops\": {\n            \"href\": \"http://192.168.1.37:8761/actuator/configprops\",\n            \"templated\": false\n        },\n        \"configprops-prefix\": {\n            \"href\": \"http://192.168.1.37:8761/actuator/configprops/{prefix}\",\n            \"templated\": true\n        },\n        \"env-toMatch\": {\n            \"href\": \"http://192.168.1.37:8761/actuator/env/{toMatch}\",\n            \"templated\": true\n        },\n        \"env\": {\n            \"href\": \"http://192.168.1.37:8761/actuator/env\",\n            \"templated\": false\n        },\n        \"loggers\": {\n            \"href\": \"http://192.168.1.37:8761/actuator/loggers\",\n            \"templated\": false\n        },\n        \"loggers-name\": {\n            \"href\": \"http://192.168.1.37:8761/actuator/loggers/{name}\",\n            \"templated\": true\n        },\n        \"heapdump\": {\n            \"href\": \"http://192.168.1.37:8761/actuator/heapdump\",\n            \"templated\": false\n        },\n        \"threaddump\": {\n            \"href\": \"http://192.168.1.37:8761/actuator/threaddump\",\n            \"templated\": false\n        },\n        \"metrics-requiredMetricName\": {\n            \"href\": \"http://192.168.1.37:8761/actuator/metrics/{requiredMetricName}\",\n            \"templated\": true\n        },\n        \"metrics\": {\n            \"href\": \"http://192.168.1.37:8761/actuator/metrics\",\n            \"templated\": false\n        },\n        \"scheduledtasks\": {\n            \"href\": \"http://192.168.1.37:8761/actuator/scheduledtasks\",\n            \"templated\": false\n        },\n        \"mappings\": {\n            \"href\": \"http://192.168.1.37:8761/actuator/mappings\",\n            \"templated\": false\n        },\n        \"refresh\": {\n            \"href\": \"http://192.168.1.37:8761/actuator/refresh\",\n            \"templated\": false\n        },\n        \"features\": {\n            \"href\": \"http://192.168.1.37:8761/actuator/features\",\n            \"templated\": false\n        },\n        \"serviceregistry\": {\n            \"href\": \"http://192.168.1.37:8761/actuator/serviceregistry\",\n            \"templated\": false\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Get Actuator Health Check",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/eureka-service-registry/actuator/health",
									"host": [
										"{{host}}"
									],
									"path": [
										"eureka-service-registry",
										"actuator",
										"health"
									]
								}
							},
							"response": [
								{
									"name": "HTTP 200 OK",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{host}}/eureka-service-registry/actuator/health",
											"host": [
												"{{host}}"
											],
											"path": [
												"eureka-service-registry",
												"actuator",
												"health"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "transfer-encoding",
											"value": "chunked"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "Content-Type",
											"value": "application/vnd.spring-boot.actuator.v3+json"
										},
										{
											"key": "Date",
											"value": "Tue, 20 Dec 2022 21:26:18 GMT"
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": \"UP\",\n    \"groups\": [\n        \"custom\"\n    ]\n}"
								}
							]
						},
						{
							"name": "Get Actuator Health Check with Details",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/eureka-service-registry/actuator/health/custom",
									"host": [
										"{{host}}"
									],
									"path": [
										"eureka-service-registry",
										"actuator",
										"health",
										"custom"
									]
								}
							},
							"response": [
								{
									"name": "HTTP 200 OK",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{host}}/eureka-service-registry/actuator/health/custom",
											"host": [
												"{{host}}"
											],
											"path": [
												"eureka-service-registry",
												"actuator",
												"health",
												"custom"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "transfer-encoding",
											"value": "chunked"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "Content-Type",
											"value": "application/vnd.spring-boot.actuator.v3+json"
										},
										{
											"key": "Date",
											"value": "Tue, 20 Dec 2022 21:26:22 GMT"
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": \"UP\",\n    \"components\": {\n        \"diskSpace\": {\n            \"status\": \"UP\",\n            \"details\": {\n                \"total\": 126224109568,\n                \"free\": 56453152768,\n                \"threshold\": 10485760,\n                \"exists\": true\n            }\n        },\n        \"ping\": {\n            \"status\": \"UP\"\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Get Actuator View All Metrics",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/eureka-service-registry/actuator/metrics",
									"host": [
										"{{host}}"
									],
									"path": [
										"eureka-service-registry",
										"actuator",
										"metrics"
									]
								}
							},
							"response": [
								{
									"name": "HTTP 200 OK",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{host}}/eureka-service-registry/actuator/metrics",
											"host": [
												"{{host}}"
											],
											"path": [
												"eureka-service-registry",
												"actuator",
												"metrics"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "transfer-encoding",
											"value": "chunked"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "Content-Type",
											"value": "application/vnd.spring-boot.actuator.v3+json"
										},
										{
											"key": "Date",
											"value": "Tue, 20 Dec 2022 21:31:24 GMT"
										}
									],
									"cookie": [],
									"body": "{\n    \"names\": [\n        \"application.ready.time\",\n        \"application.started.time\",\n        \"disk.free\",\n        \"disk.total\",\n        \"executor.active\",\n        \"executor.completed\",\n        \"executor.pool.core\",\n        \"executor.pool.max\",\n        \"executor.pool.size\",\n        \"executor.queue.remaining\",\n        \"executor.queued\",\n        \"http.server.requests\",\n        \"jvm.buffer.count\",\n        \"jvm.buffer.memory.used\",\n        \"jvm.buffer.total.capacity\",\n        \"jvm.classes.loaded\",\n        \"jvm.classes.unloaded\",\n        \"jvm.gc.live.data.size\",\n        \"jvm.gc.max.data.size\",\n        \"jvm.gc.memory.allocated\",\n        \"jvm.gc.memory.promoted\",\n        \"jvm.gc.overhead\",\n        \"jvm.gc.pause\",\n        \"jvm.memory.committed\",\n        \"jvm.memory.max\",\n        \"jvm.memory.usage.after.gc\",\n        \"jvm.memory.used\",\n        \"jvm.threads.daemon\",\n        \"jvm.threads.live\",\n        \"jvm.threads.peak\",\n        \"jvm.threads.states\",\n        \"logback.events\",\n        \"process.cpu.usage\",\n        \"process.files.max\",\n        \"process.files.open\",\n        \"process.start.time\",\n        \"process.uptime\",\n        \"system.cpu.count\",\n        \"system.cpu.usage\",\n        \"system.load.average.1m\",\n        \"tomcat.sessions.active.current\",\n        \"tomcat.sessions.active.max\",\n        \"tomcat.sessions.alive.max\",\n        \"tomcat.sessions.created\",\n        \"tomcat.sessions.expired\",\n        \"tomcat.sessions.rejected\"\n    ]\n}"
								}
							]
						},
						{
							"name": "Get Actuator Example Consume Metric",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/eureka-service-registry/actuator/metrics/executor.pool.core",
									"host": [
										"{{host}}"
									],
									"path": [
										"eureka-service-registry",
										"actuator",
										"metrics",
										"executor.pool.core"
									]
								}
							},
							"response": [
								{
									"name": "HTTP 200 OK",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{host}}/eureka-service-registry/actuator/metrics/executor.pool.core",
											"host": [
												"{{host}}"
											],
											"path": [
												"eureka-service-registry",
												"actuator",
												"metrics",
												"executor.pool.core"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "transfer-encoding",
											"value": "chunked"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "Content-Disposition",
											"value": "inline;filename=f.txt"
										},
										{
											"key": "Content-Type",
											"value": "application/vnd.spring-boot.actuator.v3+json"
										},
										{
											"key": "Date",
											"value": "Tue, 20 Dec 2022 21:32:01 GMT"
										}
									],
									"cookie": [],
									"body": "{\n    \"name\": \"executor.pool.core\",\n    \"description\": \"The core number of threads for the pool\",\n    \"baseUnit\": \"threads\",\n    \"measurements\": [\n        {\n            \"statistic\": \"VALUE\",\n            \"value\": 8\n        }\n    ],\n    \"availableTags\": [\n        {\n            \"tag\": \"name\",\n            \"values\": [\n                \"applicationTaskExecutor\"\n            ]\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Shutdown Application",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{host}}/eureka-service-registry/actuator/shutdown",
									"host": [
										"{{host}}"
									],
									"path": [
										"eureka-service-registry",
										"actuator",
										"shutdown"
									]
								}
							},
							"response": [
								{
									"name": "HTTP 200 OK",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{host}}/eureka-service-registry/actuator/shutdown",
											"host": [
												"{{host}}"
											],
											"path": [
												"eureka-service-registry",
												"actuator",
												"shutdown"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Content-Length",
											"value": "168"
										}
									],
									"cookie": [],
									"body": "{\n    \"timestamp\": \"2022-12-20T21:27:06.020+00:00\",\n    \"path\": \"/eureka-service-registry/actuator/shutdown\",\n    \"status\": 500,\n    \"error\": \"Internal Server Error\",\n    \"requestId\": \"4af06439-15\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Eureka Endpoints",
					"item": [
						{
							"name": "Get All Registered Apps",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{ServiceRegistryURL}}/eureka/apps",
									"host": [
										"{{ServiceRegistryURL}}"
									],
									"path": [
										"eureka",
										"apps"
									]
								}
							},
							"response": [
								{
									"name": "HTTP 200 OK",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{ServiceRegistryURL}}/eureka/apps",
											"host": [
												"{{ServiceRegistryURL}}"
											],
											"path": [
												"eureka",
												"apps"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "xml",
									"header": [
										{
											"key": "Content-Encoding",
											"value": "gzip"
										},
										{
											"key": "Content-Type",
											"value": "application/xml"
										},
										{
											"key": "Content-Length",
											"value": "768"
										},
										{
											"key": "Date",
											"value": "Sun, 01 Jan 2023 20:27:10 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "<applications>\n    <versions__delta>1</versions__delta>\n    <apps__hashcode>UP_2_</apps__hashcode>\n    <application>\n        <name>AUTHORIZATION-SERVER</name>\n        <instance>\n            <instanceId>192.168.1.37:authorization-server:9000</instanceId>\n            <hostName>192.168.1.37</hostName>\n            <app>AUTHORIZATION-SERVER</app>\n            <ipAddr>192.168.1.37</ipAddr>\n            <status>UP</status>\n            <overriddenstatus>UNKNOWN</overriddenstatus>\n            <port enabled=\"true\">9000</port>\n            <securePort enabled=\"false\">443</securePort>\n            <countryId>1</countryId>\n            <dataCenterInfo class=\"com.netflix.appinfo.InstanceInfo$DefaultDataCenterInfo\">\n                <name>MyOwn</name>\n            </dataCenterInfo>\n            <leaseInfo>\n                <renewalIntervalInSecs>30</renewalIntervalInSecs>\n                <durationInSecs>90</durationInSecs>\n                <registrationTimestamp>1672603915629</registrationTimestamp>\n                <lastRenewalTimestamp>1672604785767</lastRenewalTimestamp>\n                <evictionTimestamp>0</evictionTimestamp>\n                <serviceUpTimestamp>1672603915101</serviceUpTimestamp>\n            </leaseInfo>\n            <metadata>\n                <management.port>9000</management.port>\n            </metadata>\n            <homePageUrl>http://192.168.1.37:9000/</homePageUrl>\n            <statusPageUrl>http://192.168.1.37:9000/actuator/info</statusPageUrl>\n            <healthCheckUrl>http://192.168.1.37:9000/actuator/health</healthCheckUrl>\n            <vipAddress>authorization-server</vipAddress>\n            <secureVipAddress>authorization-server</secureVipAddress>\n            <isCoordinatingDiscoveryServer>false</isCoordinatingDiscoveryServer>\n            <lastUpdatedTimestamp>1672603915629</lastUpdatedTimestamp>\n            <lastDirtyTimestamp>1672603915066</lastDirtyTimestamp>\n            <actionType>ADDED</actionType>\n        </instance>\n    </application>\n    <application>\n        <name>GATEWAY</name>\n        <instance>\n            <instanceId>192.168.1.37:gateway:8765</instanceId>\n            <hostName>192.168.1.37</hostName>\n            <app>GATEWAY</app>\n            <ipAddr>192.168.1.37</ipAddr>\n            <status>UP</status>\n            <overriddenstatus>UNKNOWN</overriddenstatus>\n            <port enabled=\"true\">8765</port>\n            <securePort enabled=\"false\">443</securePort>\n            <countryId>1</countryId>\n            <dataCenterInfo class=\"com.netflix.appinfo.InstanceInfo$DefaultDataCenterInfo\">\n                <name>MyOwn</name>\n            </dataCenterInfo>\n            <leaseInfo>\n                <renewalIntervalInSecs>30</renewalIntervalInSecs>\n                <durationInSecs>90</durationInSecs>\n                <registrationTimestamp>1672603954448</registrationTimestamp>\n                <lastRenewalTimestamp>1672604764566</lastRenewalTimestamp>\n                <evictionTimestamp>0</evictionTimestamp>\n                <serviceUpTimestamp>1672603953934</serviceUpTimestamp>\n            </leaseInfo>\n            <metadata>\n                <management.port>8765</management.port>\n            </metadata>\n            <homePageUrl>http://192.168.1.37:8765/</homePageUrl>\n            <statusPageUrl>http://192.168.1.37:8765/actuator/info</statusPageUrl>\n            <healthCheckUrl>http://192.168.1.37:8765/actuator/health</healthCheckUrl>\n            <vipAddress>gateway</vipAddress>\n            <secureVipAddress>gateway</secureVipAddress>\n            <isCoordinatingDiscoveryServer>false</isCoordinatingDiscoveryServer>\n            <lastUpdatedTimestamp>1672603954449</lastUpdatedTimestamp>\n            <lastDirtyTimestamp>1672603953909</lastDirtyTimestamp>\n            <actionType>ADDED</actionType>\n        </instance>\n    </application>\n</applications>"
								}
							]
						},
						{
							"name": "Get Registered GATEWAY",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{ServiceRegistryURL}}/eureka/apps/GATEWAY",
									"host": [
										"{{ServiceRegistryURL}}"
									],
									"path": [
										"eureka",
										"apps",
										"GATEWAY"
									]
								}
							},
							"response": [
								{
									"name": "HTTP 200 OK",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{ServiceRegistryURL}}/eureka/apps/GATEWAY",
											"host": [
												"{{ServiceRegistryURL}}"
											],
											"path": [
												"eureka",
												"apps",
												"GATEWAY"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "xml",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/xml"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Sun, 01 Jan 2023 20:43:20 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "<application>\n    <name>GATEWAY</name>\n    <instance>\n        <instanceId>192.168.1.37:gateway:8765</instanceId>\n        <hostName>192.168.1.37</hostName>\n        <app>GATEWAY</app>\n        <ipAddr>192.168.1.37</ipAddr>\n        <status>UP</status>\n        <overriddenstatus>UNKNOWN</overriddenstatus>\n        <port enabled=\"true\">8765</port>\n        <securePort enabled=\"false\">443</securePort>\n        <countryId>1</countryId>\n        <dataCenterInfo class=\"com.netflix.appinfo.InstanceInfo$DefaultDataCenterInfo\">\n            <name>MyOwn</name>\n        </dataCenterInfo>\n        <leaseInfo>\n            <renewalIntervalInSecs>30</renewalIntervalInSecs>\n            <durationInSecs>90</durationInSecs>\n            <registrationTimestamp>1672603954448</registrationTimestamp>\n            <lastRenewalTimestamp>1672605754731</lastRenewalTimestamp>\n            <evictionTimestamp>0</evictionTimestamp>\n            <serviceUpTimestamp>1672603953934</serviceUpTimestamp>\n        </leaseInfo>\n        <metadata>\n            <management.port>8765</management.port>\n        </metadata>\n        <homePageUrl>http://192.168.1.37:8765/</homePageUrl>\n        <statusPageUrl>http://192.168.1.37:8765/actuator/info</statusPageUrl>\n        <healthCheckUrl>http://192.168.1.37:8765/actuator/health</healthCheckUrl>\n        <vipAddress>gateway</vipAddress>\n        <secureVipAddress>gateway</secureVipAddress>\n        <isCoordinatingDiscoveryServer>false</isCoordinatingDiscoveryServer>\n        <lastUpdatedTimestamp>1672603954449</lastUpdatedTimestamp>\n        <lastDirtyTimestamp>1672603953909</lastDirtyTimestamp>\n        <actionType>ADDED</actionType>\n    </instance>\n</application>"
								}
							]
						},
						{
							"name": "Get Registered AUTHORIZATION-SERVER",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{ServiceRegistryURL}}/eureka/apps/AUTHORIZATION-SERVER",
									"host": [
										"{{ServiceRegistryURL}}"
									],
									"path": [
										"eureka",
										"apps",
										"AUTHORIZATION-SERVER"
									]
								}
							},
							"response": [
								{
									"name": "HTTP 200 OK",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{ServiceRegistryURL}}/eureka/apps/AUTHORIZATION-SERVER",
											"host": [
												"{{ServiceRegistryURL}}"
											],
											"path": [
												"eureka",
												"apps",
												"AUTHORIZATION-SERVER"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "xml",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/xml"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Sun, 01 Jan 2023 20:43:30 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "<application>\n    <name>AUTHORIZATION-SERVER</name>\n    <instance>\n        <instanceId>192.168.1.37:authorization-server:9000</instanceId>\n        <hostName>192.168.1.37</hostName>\n        <app>AUTHORIZATION-SERVER</app>\n        <ipAddr>192.168.1.37</ipAddr>\n        <status>UP</status>\n        <overriddenstatus>UNKNOWN</overriddenstatus>\n        <port enabled=\"true\">9000</port>\n        <securePort enabled=\"false\">443</securePort>\n        <countryId>1</countryId>\n        <dataCenterInfo class=\"com.netflix.appinfo.InstanceInfo$DefaultDataCenterInfo\">\n            <name>MyOwn</name>\n        </dataCenterInfo>\n        <leaseInfo>\n            <renewalIntervalInSecs>30</renewalIntervalInSecs>\n            <durationInSecs>90</durationInSecs>\n            <registrationTimestamp>1672603915629</registrationTimestamp>\n            <lastRenewalTimestamp>1672605865930</lastRenewalTimestamp>\n            <evictionTimestamp>0</evictionTimestamp>\n            <serviceUpTimestamp>1672603915101</serviceUpTimestamp>\n        </leaseInfo>\n        <metadata>\n            <management.port>9000</management.port>\n        </metadata>\n        <homePageUrl>http://192.168.1.37:9000/</homePageUrl>\n        <statusPageUrl>http://192.168.1.37:9000/actuator/info</statusPageUrl>\n        <healthCheckUrl>http://192.168.1.37:9000/actuator/health</healthCheckUrl>\n        <vipAddress>authorization-server</vipAddress>\n        <secureVipAddress>authorization-server</secureVipAddress>\n        <isCoordinatingDiscoveryServer>false</isCoordinatingDiscoveryServer>\n        <lastUpdatedTimestamp>1672603915629</lastUpdatedTimestamp>\n        <lastDirtyTimestamp>1672603915066</lastDirtyTimestamp>\n        <actionType>ADDED</actionType>\n    </instance>\n</application>"
								}
							]
						},
						{
							"name": "Get Registered USERS-SERVICE",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{ServiceRegistryURL}}/eureka/apps/USERS",
									"host": [
										"{{ServiceRegistryURL}}"
									],
									"path": [
										"eureka",
										"apps",
										"USERS"
									]
								}
							},
							"response": [
								{
									"name": "HTTP 200 OK",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{ServiceRegistryURL}}/eureka/apps/USERS",
											"host": [
												"{{ServiceRegistryURL}}"
											],
											"path": [
												"eureka",
												"apps",
												"USERS"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "xml",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/xml"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Sun, 01 Jan 2023 20:43:47 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "<application>\n    <name>USERS</name>\n    <instance>\n        <instanceId>192.168.1.37:users:8000</instanceId>\n        <hostName>192.168.1.37</hostName>\n        <app>USERS</app>\n        <ipAddr>192.168.1.37</ipAddr>\n        <status>OUT_OF_SERVICE</status>\n        <overriddenstatus>OUT_OF_SERVICE</overriddenstatus>\n        <port enabled=\"true\">8000</port>\n        <securePort enabled=\"false\">443</securePort>\n        <countryId>1</countryId>\n        <dataCenterInfo class=\"com.netflix.appinfo.InstanceInfo$DefaultDataCenterInfo\">\n            <name>MyOwn</name>\n        </dataCenterInfo>\n        <leaseInfo>\n            <renewalIntervalInSecs>30</renewalIntervalInSecs>\n            <durationInSecs>90</durationInSecs>\n            <registrationTimestamp>1672604868112</registrationTimestamp>\n            <lastRenewalTimestamp>1672605888246</lastRenewalTimestamp>\n            <evictionTimestamp>0</evictionTimestamp>\n            <serviceUpTimestamp>1672604867602</serviceUpTimestamp>\n        </leaseInfo>\n        <metadata>\n            <management.port>8000</management.port>\n        </metadata>\n        <homePageUrl>http://192.168.1.37:8000/</homePageUrl>\n        <statusPageUrl>http://192.168.1.37:8000/actuator/info</statusPageUrl>\n        <healthCheckUrl>http://192.168.1.37:8000/actuator/health</healthCheckUrl>\n        <vipAddress>users</vipAddress>\n        <secureVipAddress>users</secureVipAddress>\n        <isCoordinatingDiscoveryServer>false</isCoordinatingDiscoveryServer>\n        <lastUpdatedTimestamp>1672605794638</lastUpdatedTimestamp>\n        <lastDirtyTimestamp>1672604867580</lastDirtyTimestamp>\n        <actionType>MODIFIED</actionType>\n    </instance>\n</application>"
								}
							]
						},
						{
							"name": "Set instance OUT-OF-SERVICE",
							"request": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{ServiceRegistryURL}}/eureka/apps/{{ServiceRegistryExampleAppId}}/{{ServiceRegistryExampleInstanceId}}/status?value=OUT_OF_SERVICE",
									"host": [
										"{{ServiceRegistryURL}}"
									],
									"path": [
										"eureka",
										"apps",
										"{{ServiceRegistryExampleAppId}}",
										"{{ServiceRegistryExampleInstanceId}}",
										"status"
									],
									"query": [
										{
											"key": "value",
											"value": "OUT_OF_SERVICE"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Set instance UP",
							"request": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{ServiceRegistryURL}}/eureka/apps/{{ServiceRegistryExampleAppId}}/{{ServiceRegistryExampleInstanceId}}/status?value=UP",
									"host": [
										"{{ServiceRegistryURL}}"
									],
									"path": [
										"eureka",
										"apps",
										"{{ServiceRegistryExampleAppId}}",
										"{{ServiceRegistryExampleInstanceId}}",
										"status"
									],
									"query": [
										{
											"key": "value",
											"value": "UP"
										}
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Authorization Server",
			"item": [
				{
					"name": "Actuator",
					"item": [
						{
							"name": "Get Actuator All End-Points",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{AuthorizationServerURL}}/actuator",
									"host": [
										"{{AuthorizationServerURL}}"
									],
									"path": [
										"actuator"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Actuator Health Check",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{AuthorizationServerURL}}/actuator/health",
									"host": [
										"{{AuthorizationServerURL}}"
									],
									"path": [
										"actuator",
										"health"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Actuator Health Check with Details",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{AuthorizationServerURL}}/actuator/health/custom",
									"host": [
										"{{AuthorizationServerURL}}"
									],
									"path": [
										"actuator",
										"health",
										"custom"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Actuator View All Metrics",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{AuthorizationServerURL}}/actuator/metrics",
									"host": [
										"{{AuthorizationServerURL}}"
									],
									"path": [
										"actuator",
										"metrics"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Actuator Example Consume Metric",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{AuthorizationServerURL}}/actuator/metrics/executor.pool.core",
									"host": [
										"{{AuthorizationServerURL}}"
									],
									"path": [
										"actuator",
										"metrics",
										"executor.pool.core"
									]
								}
							},
							"response": []
						},
						{
							"name": "Shutdown Application",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{AuthorizationServerURL}}/actuator/shutdown",
									"host": [
										"{{AuthorizationServerURL}}"
									],
									"path": [
										"actuator",
										"shutdown"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "OAuth2",
					"item": [
						{
							"name": "Get Token with Client Credentials",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"if (responseCode.code >= 200 && responseCode.code < 300) {\r",
											"    var json = JSON.parse(responseBody);\r",
											"    pm.collectionVariables.set(\"BearerToken\", json.access_token);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{ClientCredentials-ClientSecret}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{ClientCredentials-ClientId}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "grant_type",
											"value": "client_credentials",
											"type": "text"
										},
										{
											"key": "scope",
											"value": "user:canCreate",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{AuthorizationServerURL}}/oauth2/token",
									"host": [
										"{{AuthorizationServerURL}}"
									],
									"path": [
										"oauth2",
										"token"
									]
								}
							},
							"response": [
								{
									"name": "HTTP 200 OK",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "grant_type",
													"value": "client_credentials",
													"type": "text"
												},
												{
													"key": "scope",
													"value": "user:canCreate",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{AuthorizationServerURL}}/oauth2/token",
											"host": [
												"{{AuthorizationServerURL}}"
											],
											"path": [
												"oauth2",
												"token"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "Set-Cookie",
											"value": "JSESSIONID=7B78EDF7BB41AFE387651F8E61624817; Path=/; HttpOnly"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json;charset=UTF-8"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Tue, 20 Dec 2022 22:27:09 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"access_token\": \"eyJraWQiOiJkZWQ5YWUwZS1lZjM3LTRmMTgtOTdiYi04YjNlNWU0MzAzN2YiLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiJkN2U0ZTFjZS1iY2M2LTQ3ZWMtODAwZi0yYjYxNjczOTk3ODUiLCJhdWQiOiJkN2U0ZTFjZS1iY2M2LTQ3ZWMtODAwZi0yYjYxNjczOTk3ODUiLCJuYmYiOjE2NzE1NzUyMjksInNjb3BlIjpbInVzZXI6Y2FuQ3JlYXRlIl0sImlzcyI6Imh0dHA6Ly9sb2NhbGhvc3Q6OTAwMCIsImV4cCI6MTY3MTU3NTQwOSwiaWF0IjoxNjcxNTc1MjI5fQ.PRHnXvAyM_Ffv0LVpv-8oHQ6GJ09oajigXKZiWKhYW5zvDEfNJxLij35ZPnY_Em5u6dmSowmhTDvNJWq_AGO4_MyATs72BonuqaWYu4gvhzGYRO4oxBUvH3dZ9fYK8j4nKZ9z_V6RFFf6v2ksxjtXoNwQU8VsnWIkjaLQD0AusJQcemA6vzj1VhOgUVK2xrh5kp8ofBH3qMGAYxwr9aKR4XSW5gSfHpojSZ2-Bv7C7vemyO_FnapKsBDVEkLjzxmKz5XpvJHsi7rGUARuK-shlJh9I23gKh50DVA4cRXKK22gXc6RczQfh97nicakjd4Y1dLiAPWwoeVIL1Cxg0mvg\",\n    \"scope\": \"user:canCreate\",\n    \"token_type\": \"Bearer\",\n    \"expires_in\": 179\n}"
								}
							]
						},
						{
							"name": "Get Token with Authorization Code",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"if (responseCode.code >= 200 && responseCode.code < 300) {\r",
											"    var json = JSON.parse(responseBody);\r",
											"    pm.collectionVariables.set(\"BearerToken\", json.access_token);\r",
											"    pm.collectionVariables.set(\"RefreshToken\", json.refresh_token);\r",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{AuthorizationCode-ClientSecret}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{AuthorizationCode-ClientId}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "grant_type",
											"value": "authorization_code",
											"type": "text"
										},
										{
											"key": "code",
											"value": "{{AuthorizationCode}}",
											"type": "text"
										},
										{
											"key": "redirect_uri",
											"value": "http://127.0.0.1:8100/authorize",
											"type": "default"
										}
									]
								},
								"url": {
									"raw": "{{AuthorizationServerURL}}/oauth2/token",
									"host": [
										"{{AuthorizationServerURL}}"
									],
									"path": [
										"oauth2",
										"token"
									]
								}
							},
							"response": [
								{
									"name": "HTTP 200 OK",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "grant_type",
													"value": "authorization_code",
													"type": "text"
												},
												{
													"key": "code",
													"value": "KNaYSWcGpBu75DyQAnTivfuWgXbZNmHCNSURYzPYlOHLt0EbX7HDLQt7c0dYZosj6jjvy9i6BreGcD4jc_buwGqy6tOEw8Aybn_cGf3fVOSt5SS27Gpa6Y1P1vIxkZ8-",
													"type": "text"
												},
												{
													"key": "redirect_uri",
													"value": "https://oidcdebugger.com/debug",
													"type": "default"
												}
											]
										},
										"url": {
											"raw": "{{AuthorizationServerURL}}/oauth2/token",
											"host": [
												"{{AuthorizationServerURL}}"
											],
											"path": [
												"oauth2",
												"token"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "Set-Cookie",
											"value": "JSESSIONID=A9CFE018E63AADC1FA02809C2F70160C; Path=/; HttpOnly"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json;charset=UTF-8"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Tue, 20 Dec 2022 22:32:37 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"access_token\": \"eyJraWQiOiJkZWQ5YWUwZS1lZjM3LTRmMTgtOTdiYi04YjNlNWU0MzAzN2YiLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiJqb2huZG9lQGVtYWlsLmNvbSIsImF1ZCI6IjkyYTY3MDkxLTQyNjQtNGNlNC04ZmNiLTNlYzZkYmZlZWExNiIsIm5iZiI6MTY3MTU3NTU1Nywic2NvcGUiOlsidXNlcjpjYW5SZWFkIl0sImlzcyI6Imh0dHA6Ly9sb2NhbGhvc3Q6OTAwMCIsImV4cCI6MTY3MTU3NjQ1NywiaWF0IjoxNjcxNTc1NTU3fQ.Q5T5XGoRVLCyPFkr_naM8xrWKbnM-vSSbS0tIPt3wjhF-UEhp9SAYd0LyRRUhp9Ppw7XrWIBIs8c-i3IaH8sE3mz7eESaivEMz-CLJTeaZM8jnzfO-cq92edzNaFchaVmwdG6IAv6IiS5yl0Sq8XJXtJUqTqXlykn3Ey2BQ0N6nWrcC_aWfq7Bsl7bcTZDY-W0XXGvVu9lvqoO-llZ75ApHvvoD_tehmBuMUflyZADXIA3e8k7DLDe8zjZOq0e251Djp31iHLRcDsgiBYbTFOTIW6MAW_Jq-Ietd6OAMWP1dzgDx1FqRbxMu89N-ueHpFeLTjps-Wp5BlzcwJj6KSA\",\n    \"refresh_token\": \"l4DfOPzseAvGIfTJURNh_E9aM-80nTwYtrMtQ-oKA9DkqbT6BV7pRthA-3OTIz06un5l08WMwcWmDyp8RHVol86Zh-ZwQoozBPAggSEbGmZhue8KMpvQoMckOzfgF7ej\",\n    \"scope\": \"user:canRead\",\n    \"token_type\": \"Bearer\",\n    \"expires_in\": 899\n}"
								}
							]
						},
						{
							"name": "Get Token Data with Introspect",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"if (responseCode.code >= 200 && responseCode.code < 300) {\r",
											"    var json = JSON.parse(responseBody);\r",
											"    pm.collectionVariables.set(\"BearerToken\", json.access_token);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{AuthorizationCode-ClientSecret}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{AuthorizationCode-ClientId}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "default"
										}
									]
								},
								"url": {
									"raw": "{{AuthorizationServerURL}}/oauth2/introspect",
									"host": [
										"{{AuthorizationServerURL}}"
									],
									"path": [
										"oauth2",
										"introspect"
									]
								}
							},
							"response": [
								{
									"name": "HTTP 200 OK with Client Credentials Token",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "default"
												}
											]
										},
										"url": {
											"raw": "{{AuthorizationServerURL}}/oauth2/introspect",
											"host": [
												"{{AuthorizationServerURL}}"
											],
											"path": [
												"oauth2",
												"introspect"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "Set-Cookie",
											"value": "JSESSIONID=E0C591C9625A4A3936B1684322EF70A7; Path=/; HttpOnly"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Tue, 20 Dec 2022 22:27:12 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"active\": true,\n    \"sub\": \"d7e4e1ce-bcc6-47ec-800f-2b6167399785\",\n    \"aud\": [\n        \"d7e4e1ce-bcc6-47ec-800f-2b6167399785\"\n    ],\n    \"nbf\": 1671575229,\n    \"scope\": \"user:canCreate\",\n    \"iss\": \"http://localhost:9000\",\n    \"exp\": 1671575409,\n    \"iat\": 1671575229,\n    \"client_id\": \"d7e4e1ce-bcc6-47ec-800f-2b6167399785\",\n    \"token_type\": \"Bearer\"\n}"
								},
								{
									"name": "HTTP 200 OK with Authorization Code Token",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "default"
												}
											]
										},
										"url": {
											"raw": "{{AuthorizationServerURL}}/oauth2/introspect",
											"host": [
												"{{AuthorizationServerURL}}"
											],
											"path": [
												"oauth2",
												"introspect"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Wed, 21 Dec 2022 01:21:49 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"active\": true,\n    \"sub\": \"johndoe@email.com\",\n    \"aud\": [\n        \"92a67091-4264-4ce4-8fcb-3ec6dbfeea16\"\n    ],\n    \"nbf\": 1671585635,\n    \"scope\": \"user:canRead\",\n    \"iss\": \"http://localhost:9000\",\n    \"exp\": 1671586535,\n    \"iat\": 1671585635,\n    \"client_id\": \"92a67091-4264-4ce4-8fcb-3ec6dbfeea16\",\n    \"token_type\": \"Bearer\"\n}"
								},
								{
									"name": "HTTP 200 OK with Invalid Token",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "default"
												}
											]
										},
										"url": {
											"raw": "{{AuthorizationServerURL}}/oauth2/introspect",
											"host": [
												"{{AuthorizationServerURL}}"
											],
											"path": [
												"oauth2",
												"introspect"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "Set-Cookie",
											"value": "JSESSIONID=0194E0DB182088D9C59BDD4DB8D2DDBB; Path=/; HttpOnly"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Tue, 20 Dec 2022 22:33:28 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"active\": false\n}"
								}
							]
						},
						{
							"name": "Get Public Key Algorithm for Auths - JWKS",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"if (responseCode.code >= 200 && responseCode.code < 300) {\r",
											"    var json = JSON.parse(responseBody);\r",
											"    pm.collectionVariables.set(\"BearerToken\", json.access_token);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{AuthorizationServerURL}}/oauth2/jwks",
									"host": [
										"{{AuthorizationServerURL}}"
									],
									"path": [
										"oauth2",
										"jwks"
									]
								}
							},
							"response": [
								{
									"name": "HTTP 200 OK",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{AuthorizationServerURL}}/oauth2/jwks",
											"host": [
												"{{AuthorizationServerURL}}"
											],
											"path": [
												"oauth2",
												"jwks"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json;charset=ISO-8859-1"
										},
										{
											"key": "Content-Length",
											"value": "429"
										},
										{
											"key": "Date",
											"value": "Tue, 20 Dec 2022 22:37:48 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"keys\": [\n        {\n            \"kty\": \"RSA\",\n            \"e\": \"AQAB\",\n            \"kid\": \"ded9ae0e-ef37-4f18-97bb-8b3e5e43037f\",\n            \"n\": \"r1GMJjvHNCHWaJl7hoUFiW8f-UhJY-zbn7WQtGys7bv_vAvXSSKsxRxf-ZwgQhDDVDDIi08SfcAX5HLYfwqwpFal07sEfEdv9vBU_4PuJZujlX8loHCJ6tUhPYlWkKsly5T8Dq0OagB1Qt4TSkhM8oSIMsdEKw-hn4oR2dZmueJDvggXMF5t_6qM-lk5aBnB6YHqz21NFVRoDe9uJjzlxlUNrVcvyYD5HkNfLdDVdiWOSe57wnJrl42vIBYKR-jWu2dnpyb0tRW1eqfaIZjPW42SmQwGpfDXSqQ9CEem8VND3MO2jLZC31I0-_gIWOBAfWns6whu4aCYqk6S5dKOoQ\"\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Get Token with Refresh Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"if (responseCode.code >= 200 && responseCode.code < 300) {",
											"    var json = JSON.parse(responseBody);",
											"    pm.collectionVariables.set(\"BearerToken\", json.access_token);",
											"    pm.collectionVariables.set(\"RefreshToken\", json.refresh_token);",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{AuthorizationCode-ClientSecret}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{AuthorizationCode-ClientId}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "grant_type",
											"value": "refresh_token",
											"type": "default"
										},
										{
											"key": "refresh_token",
											"value": "{{RefreshToken}}",
											"type": "default"
										}
									]
								},
								"url": {
									"raw": "{{AuthorizationServerURL}}/oauth2/token",
									"host": [
										"{{AuthorizationServerURL}}"
									],
									"path": [
										"oauth2",
										"token"
									]
								}
							},
							"response": [
								{
									"name": "HTTP 200 OK",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "grant_type",
													"value": "refresh_token",
													"type": "default"
												},
												{
													"key": "refresh_token",
													"value": "{{RefreshToken}}",
													"type": "default"
												}
											]
										},
										"url": {
											"raw": "{{AuthorizationServerURL}}/oauth2/token",
											"host": [
												"{{AuthorizationServerURL}}"
											],
											"path": [
												"oauth2",
												"token"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json;charset=UTF-8"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Date",
											"value": "Fri, 30 Dec 2022 23:33:05 GMT"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=60"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										}
									],
									"cookie": [],
									"body": "{\n    \"access_token\": \"eyJraWQiOiJkMzI4MTVmMy1hMmIxLTQwZWYtOTAyOC0xYTAwY2VkZDdjZTEiLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiJqb2huZG9lQGVtYWlsLmNvbSIsImF1ZCI6IjkyYTY3MDkxLTQyNjQtNGNlNC04ZmNiLTNlYzZkYmZlZWExNiIsIm5iZiI6MTY3MjQ0MzE4NSwic2NvcGUiOlsidXNlcjpjYW5TZWxmUmVhZCJdLCJpc3MiOiJodHRwOi8vbG9jYWxob3N0OjkwMDAiLCJleHAiOjE2NzI0NDQwODUsImlhdCI6MTY3MjQ0MzE4NX0.ZThoQZbXvIAYBqkpnAOZk4B_Sk4oWu-fxuS7O90nR5qyk2RGVk0FOGPShuHmKXdglTj3-s0Q6-Iy5da7qE9fP7ZncUm5Qrv-mCmz8xoUdCZXqeO9vQVbUFQtj8RXx_Ghy3WPvgwBQ-oSDH7ibAyO4sQ4HXSiXFG8ZqRLG9jSXPlxj5agLG9oi9KqRMbuJFgBd2O7saY6FR4Yf3R2Q03YZxo9yFGGN79XEpwcNi4S4iT1EQGYnkzHEJDytqec6R7gLetHuR5TzAdhiZoVgC2rq0y53Gt8cZiumtHXTtUgD7EByR1ETcgikB-hOQwY0__WBwv1YMuv1LXhmHVBwPol-g\",\n    \"refresh_token\": \"5SnvxNrrSCJiOGiSsr2JkgMJ1CzoiDfPpFy3uimbu5pCNuOh9l4WX9aefH3gxBbui0BqA52Pdl2ZgV1jqVN2fEQ1zAtR1msPWZvFE361E-kMyHuvM0n49iw6B-9CoKC9\",\n    \"scope\": \"user:canSelfRead\",\n    \"token_type\": \"Bearer\",\n    \"expires_in\": 899\n}"
								}
							]
						}
					],
					"auth": {
						"type": "noauth"
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "User-Service-API",
			"item": [
				{
					"name": "Actuator Endpoints",
					"item": [
						{
							"name": "Get Actuator All End-Points",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/users/actuator",
									"host": [
										"{{host}}"
									],
									"path": [
										"users",
										"actuator"
									]
								}
							},
							"response": [
								{
									"name": "HTTP 200 OK",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{host}}/users/actuator",
											"host": [
												"{{host}}"
											],
											"path": [
												"users",
												"actuator"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "transfer-encoding",
											"value": "chunked"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/vnd.spring-boot.actuator.v3+json"
										},
										{
											"key": "Date",
											"value": "Sun, 01 Jan 2023 04:52:10 GMT"
										}
									],
									"cookie": [],
									"body": "{\n    \"_links\": {\n        \"self\": {\n            \"href\": \"http://192.168.1.37:8000/actuator\",\n            \"templated\": false\n        },\n        \"beans\": {\n            \"href\": \"http://192.168.1.37:8000/actuator/beans\",\n            \"templated\": false\n        },\n        \"caches-cache\": {\n            \"href\": \"http://192.168.1.37:8000/actuator/caches/{cache}\",\n            \"templated\": true\n        },\n        \"caches\": {\n            \"href\": \"http://192.168.1.37:8000/actuator/caches\",\n            \"templated\": false\n        },\n        \"health\": {\n            \"href\": \"http://192.168.1.37:8000/actuator/health\",\n            \"templated\": false\n        },\n        \"health-path\": {\n            \"href\": \"http://192.168.1.37:8000/actuator/health/{*path}\",\n            \"templated\": true\n        },\n        \"info\": {\n            \"href\": \"http://192.168.1.37:8000/actuator/info\",\n            \"templated\": false\n        },\n        \"conditions\": {\n            \"href\": \"http://192.168.1.37:8000/actuator/conditions\",\n            \"templated\": false\n        },\n        \"configprops\": {\n            \"href\": \"http://192.168.1.37:8000/actuator/configprops\",\n            \"templated\": false\n        },\n        \"configprops-prefix\": {\n            \"href\": \"http://192.168.1.37:8000/actuator/configprops/{prefix}\",\n            \"templated\": true\n        },\n        \"env-toMatch\": {\n            \"href\": \"http://192.168.1.37:8000/actuator/env/{toMatch}\",\n            \"templated\": true\n        },\n        \"env\": {\n            \"href\": \"http://192.168.1.37:8000/actuator/env\",\n            \"templated\": false\n        },\n        \"loggers\": {\n            \"href\": \"http://192.168.1.37:8000/actuator/loggers\",\n            \"templated\": false\n        },\n        \"loggers-name\": {\n            \"href\": \"http://192.168.1.37:8000/actuator/loggers/{name}\",\n            \"templated\": true\n        },\n        \"heapdump\": {\n            \"href\": \"http://192.168.1.37:8000/actuator/heapdump\",\n            \"templated\": false\n        },\n        \"threaddump\": {\n            \"href\": \"http://192.168.1.37:8000/actuator/threaddump\",\n            \"templated\": false\n        },\n        \"metrics-requiredMetricName\": {\n            \"href\": \"http://192.168.1.37:8000/actuator/metrics/{requiredMetricName}\",\n            \"templated\": true\n        },\n        \"metrics\": {\n            \"href\": \"http://192.168.1.37:8000/actuator/metrics\",\n            \"templated\": false\n        },\n        \"scheduledtasks\": {\n            \"href\": \"http://192.168.1.37:8000/actuator/scheduledtasks\",\n            \"templated\": false\n        },\n        \"sessions-sessionId\": {\n            \"href\": \"http://192.168.1.37:8000/actuator/sessions/{sessionId}\",\n            \"templated\": true\n        },\n        \"sessions\": {\n            \"href\": \"http://192.168.1.37:8000/actuator/sessions\",\n            \"templated\": false\n        },\n        \"mappings\": {\n            \"href\": \"http://192.168.1.37:8000/actuator/mappings\",\n            \"templated\": false\n        },\n        \"refresh\": {\n            \"href\": \"http://192.168.1.37:8000/actuator/refresh\",\n            \"templated\": false\n        },\n        \"features\": {\n            \"href\": \"http://192.168.1.37:8000/actuator/features\",\n            \"templated\": false\n        },\n        \"serviceregistry\": {\n            \"href\": \"http://192.168.1.37:8000/actuator/serviceregistry\",\n            \"templated\": false\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Get Actuator Health Check",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/users/actuator/health",
									"host": [
										"{{host}}"
									],
									"path": [
										"users",
										"actuator",
										"health"
									]
								}
							},
							"response": [
								{
									"name": "HTTP 200 OK",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{host}}/users/actuator/health",
											"host": [
												"{{host}}"
											],
											"path": [
												"users",
												"actuator",
												"health"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "transfer-encoding",
											"value": "chunked"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/vnd.spring-boot.actuator.v3+json"
										},
										{
											"key": "Date",
											"value": "Sun, 01 Jan 2023 04:52:33 GMT"
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": \"UP\",\n    \"groups\": [\n        \"custom\"\n    ]\n}"
								}
							]
						},
						{
							"name": "Get Actuator Health Check with Details",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/users/actuator/health/custom",
									"host": [
										"{{host}}"
									],
									"path": [
										"users",
										"actuator",
										"health",
										"custom"
									]
								}
							},
							"response": [
								{
									"name": "HTTP 200 OK",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{host}}/users/actuator/health/custom",
											"host": [
												"{{host}}"
											],
											"path": [
												"users",
												"actuator",
												"health",
												"custom"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "transfer-encoding",
											"value": "chunked"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/vnd.spring-boot.actuator.v3+json"
										},
										{
											"key": "Date",
											"value": "Sun, 01 Jan 2023 04:52:55 GMT"
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": \"UP\",\n    \"components\": {\n        \"db\": {\n            \"status\": \"UP\",\n            \"details\": {\n                \"database\": \"PostgreSQL\",\n                \"validationQuery\": \"isValid()\"\n            }\n        },\n        \"diskSpace\": {\n            \"status\": \"UP\",\n            \"details\": {\n                \"total\": 126224109568,\n                \"free\": 52746473472,\n                \"threshold\": 10485760,\n                \"exists\": true\n            }\n        },\n        \"ping\": {\n            \"status\": \"UP\"\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Get Actuator View All Metrics",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/users/actuator/metrics",
									"host": [
										"{{host}}"
									],
									"path": [
										"users",
										"actuator",
										"metrics"
									]
								}
							},
							"response": [
								{
									"name": "HTTP 200 OK",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{host}}/users/actuator/metrics",
											"host": [
												"{{host}}"
											],
											"path": [
												"users",
												"actuator",
												"metrics"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "transfer-encoding",
											"value": "chunked"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/vnd.spring-boot.actuator.v3+json"
										},
										{
											"key": "Date",
											"value": "Sun, 01 Jan 2023 04:53:30 GMT"
										}
									],
									"cookie": [],
									"body": "{\n    \"names\": [\n        \"application.ready.time\",\n        \"application.started.time\",\n        \"disk.free\",\n        \"disk.total\",\n        \"executor.active\",\n        \"executor.completed\",\n        \"executor.pool.core\",\n        \"executor.pool.max\",\n        \"executor.pool.size\",\n        \"executor.queue.remaining\",\n        \"executor.queued\",\n        \"hikaricp.connections\",\n        \"hikaricp.connections.acquire\",\n        \"hikaricp.connections.active\",\n        \"hikaricp.connections.creation\",\n        \"hikaricp.connections.idle\",\n        \"hikaricp.connections.max\",\n        \"hikaricp.connections.min\",\n        \"hikaricp.connections.pending\",\n        \"hikaricp.connections.timeout\",\n        \"hikaricp.connections.usage\",\n        \"http.server.requests\",\n        \"jdbc.connections.max\",\n        \"jdbc.connections.min\",\n        \"jvm.buffer.count\",\n        \"jvm.buffer.memory.used\",\n        \"jvm.buffer.total.capacity\",\n        \"jvm.classes.loaded\",\n        \"jvm.classes.unloaded\",\n        \"jvm.gc.live.data.size\",\n        \"jvm.gc.max.data.size\",\n        \"jvm.gc.memory.allocated\",\n        \"jvm.gc.memory.promoted\",\n        \"jvm.gc.overhead\",\n        \"jvm.gc.pause\",\n        \"jvm.memory.committed\",\n        \"jvm.memory.max\",\n        \"jvm.memory.usage.after.gc\",\n        \"jvm.memory.used\",\n        \"jvm.threads.daemon\",\n        \"jvm.threads.live\",\n        \"jvm.threads.peak\",\n        \"jvm.threads.states\",\n        \"lettuce.command.completion\",\n        \"lettuce.command.completion.percentile\",\n        \"lettuce.command.firstresponse\",\n        \"lettuce.command.firstresponse.percentile\",\n        \"logback.events\",\n        \"process.cpu.usage\",\n        \"process.files.max\",\n        \"process.files.open\",\n        \"process.start.time\",\n        \"process.uptime\",\n        \"system.cpu.count\",\n        \"system.cpu.usage\",\n        \"system.load.average.1m\",\n        \"tomcat.sessions.active.current\",\n        \"tomcat.sessions.active.max\",\n        \"tomcat.sessions.alive.max\",\n        \"tomcat.sessions.created\",\n        \"tomcat.sessions.expired\",\n        \"tomcat.sessions.rejected\"\n    ]\n}"
								}
							]
						},
						{
							"name": "Get Actuator Example Consume Metric",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/users/actuator/metrics/executor.pool.core",
									"host": [
										"{{host}}"
									],
									"path": [
										"users",
										"actuator",
										"metrics",
										"executor.pool.core"
									]
								}
							},
							"response": [
								{
									"name": "HTTP 200 OK",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{host}}/users/actuator/metrics/executor.pool.core",
											"host": [
												"{{host}}"
											],
											"path": [
												"users",
												"actuator",
												"metrics",
												"executor.pool.core"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "transfer-encoding",
											"value": "chunked"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "Content-Disposition",
											"value": "inline;filename=f.txt"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/vnd.spring-boot.actuator.v3+json"
										},
										{
											"key": "Date",
											"value": "Sun, 01 Jan 2023 04:53:47 GMT"
										}
									],
									"cookie": [],
									"body": "{\n    \"name\": \"executor.pool.core\",\n    \"description\": \"The core number of threads for the pool\",\n    \"baseUnit\": \"threads\",\n    \"measurements\": [\n        {\n            \"statistic\": \"VALUE\",\n            \"value\": 8\n        }\n    ],\n    \"availableTags\": [\n        {\n            \"tag\": \"name\",\n            \"values\": [\n                \"applicationTaskExecutor\"\n            ]\n        }\n    ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "Account",
					"item": [
						{
							"name": "View All Users",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/users/account/all",
									"host": [
										"{{host}}"
									],
									"path": [
										"users",
										"account",
										"all"
									]
								}
							},
							"response": [
								{
									"name": "HTTP 200 OK",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{host}}/users/account/all",
											"host": [
												"{{host}}"
											],
											"path": [
												"users",
												"account",
												"all"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "transfer-encoding",
											"value": "chunked"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Date",
											"value": "Sat, 21 Jan 2023 21:42:41 GMT"
										}
									],
									"cookie": [],
									"body": "{\n    \"content\": [\n        {\n            \"username\": \"emmywatson@email.com\",\n            \"enabled\": true,\n            \"firstName\": \"Emmy\",\n            \"lastName\": \"Watson\",\n            \"roles\": [\n                \"ROLE_USER\"\n            ]\n        },\n        {\n            \"username\": \"johndoe@email.com\",\n            \"enabled\": true,\n            \"firstName\": \"John\",\n            \"lastName\": \"Doe\",\n            \"roles\": [\n                \"ROLE_USER\",\n                \"ROLE_ADMIN\"\n            ]\n        },\n        {\n            \"username\": \"marcoshssilva.dev@gmail.com\",\n            \"enabled\": true,\n            \"firstName\": \"Marcos\",\n            \"lastName\": \"Silva\",\n            \"roles\": [\n                \"ROLE_MASTER\",\n                \"ROLE_USER\",\n                \"ROLE_ADMIN\"\n            ]\n        }\n    ],\n    \"pageable\": {\n        \"sort\": {\n            \"sorted\": true,\n            \"unsorted\": false,\n            \"empty\": false\n        },\n        \"pageNumber\": 0,\n        \"pageSize\": 50,\n        \"offset\": 0,\n        \"paged\": true,\n        \"unpaged\": false\n    },\n    \"last\": true,\n    \"totalPages\": 1,\n    \"totalElements\": 3,\n    \"sort\": {\n        \"sorted\": true,\n        \"unsorted\": false,\n        \"empty\": false\n    },\n    \"first\": true,\n    \"number\": 0,\n    \"numberOfElements\": 3,\n    \"size\": 50,\n    \"empty\": false\n}"
								}
							]
						},
						{
							"name": "View Data from User",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/users/account/marcoshssilva.dev@gmail.com/data",
									"host": [
										"{{host}}"
									],
									"path": [
										"users",
										"account",
										"marcoshssilva.dev@gmail.com",
										"data"
									]
								}
							},
							"response": [
								{
									"name": "HTTP 200 OK",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{host}}/users/account/marcoshssilva.dev@gmail.com/data",
											"host": [
												"{{host}}"
											],
											"path": [
												"users",
												"account",
												"marcoshssilva.dev@gmail.com",
												"data"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "transfer-encoding",
											"value": "chunked"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Date",
											"value": "Sat, 21 Jan 2023 21:45:52 GMT"
										}
									],
									"cookie": [],
									"body": "{\n    \"username\": \"marcoshssilva.dev@gmail.com\",\n    \"enabled\": true,\n    \"firstName\": \"Marcos\",\n    \"lastName\": \"Silva\",\n    \"roles\": [\n        \"ROLE_MASTER\",\n        \"ROLE_USER\",\n        \"ROLE_ADMIN\"\n    ]\n}"
								}
							]
						},
						{
							"name": "Update Data from User",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"firstName\": \"Marcos\",\n    \"lastName\": \"Santana\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/users/account/marcoshssilva.dev@gmail.com/updateData",
									"host": [
										"{{host}}"
									],
									"path": [
										"users",
										"account",
										"marcoshssilva.dev@gmail.com",
										"updateData"
									]
								}
							},
							"response": [
								{
									"name": "HTTP 200 OK",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"firstName\": \"Marcos\",\n    \"lastName\": \"Santana\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{host}}/users/account/marcoshssilva.dev@gmail.com/updateData",
											"host": [
												"{{host}}"
											],
											"path": [
												"users",
												"account",
												"marcoshssilva.dev@gmail.com",
												"updateData"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "plain",
									"header": [
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Length",
											"value": "0"
										},
										{
											"key": "Date",
											"value": "Sat, 21 Jan 2023 21:48:59 GMT"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Account Roles",
					"item": [
						{
							"name": "Get All Roles",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/users/role/all",
									"host": [
										"{{host}}"
									],
									"path": [
										"users",
										"role",
										"all"
									]
								}
							},
							"response": [
								{
									"name": "HTTP 200 OK",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{host}}/users/role/all",
											"host": [
												"{{host}}"
											],
											"path": [
												"users",
												"role",
												"all"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "transfer-encoding",
											"value": "chunked"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Date",
											"value": "Sat, 21 Jan 2023 22:04:22 GMT"
										}
									],
									"cookie": [],
									"body": "[\n    \"ADMIN\",\n    \"MASTER\",\n    \"USER\"\n]"
								}
							]
						},
						{
							"name": "Get Users in Role",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/users/role/ADMIN/showAccounts",
									"host": [
										"{{host}}"
									],
									"path": [
										"users",
										"role",
										"ADMIN",
										"showAccounts"
									]
								}
							},
							"response": [
								{
									"name": "HTTP 200 OK",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{host}}/users/role/ADMIN/showAccounts",
											"host": [
												"{{host}}"
											],
											"path": [
												"users",
												"role",
												"ADMIN",
												"showAccounts"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "transfer-encoding",
											"value": "chunked"
										},
										{
											"key": "Vary",
											"value": "Origin"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Method"
										},
										{
											"key": "Vary",
											"value": "Access-Control-Request-Headers"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Date",
											"value": "Sat, 21 Jan 2023 22:13:56 GMT"
										}
									],
									"cookie": [],
									"body": "{\n    \"roles\": \"ADMIN\",\n    \"users\": {\n        \"content\": [\n            {\n                \"username\": \"johndoe@email.com\",\n                \"enabled\": true,\n                \"firstName\": \"John\",\n                \"lastName\": \"Doe\",\n                \"imageUrl\": null,\n                \"roles\": [\n                    \"ROLE_USER\",\n                    \"ROLE_ADMIN\"\n                ]\n            },\n            {\n                \"username\": \"marcoshssilva.dev@gmail.com\",\n                \"enabled\": true,\n                \"firstName\": \"Marcos\",\n                \"lastName\": \"Santana\",\n                \"imageUrl\": null,\n                \"roles\": [\n                    \"ROLE_MASTER\",\n                    \"ROLE_USER\",\n                    \"ROLE_ADMIN\"\n                ]\n            }\n        ],\n        \"pageable\": {\n            \"sort\": {\n                \"sorted\": true,\n                \"unsorted\": false,\n                \"empty\": false\n            },\n            \"pageNumber\": 0,\n            \"pageSize\": 50,\n            \"offset\": 0,\n            \"paged\": true,\n            \"unpaged\": false\n        },\n        \"last\": true,\n        \"totalPages\": 1,\n        \"totalElements\": 2,\n        \"first\": true,\n        \"number\": 0,\n        \"sort\": {\n            \"sorted\": true,\n            \"unsorted\": false,\n            \"empty\": false\n        },\n        \"numberOfElements\": 2,\n        \"size\": 50,\n        \"empty\": false\n    }\n}"
								}
							]
						}
					]
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		}
	],
	"auth": {
		"type": "oauth2",
		"oauth2": [
			{
				"key": "useBrowser",
				"value": false,
				"type": "boolean"
			},
			{
				"key": "tokenType",
				"value": "Bearer",
				"type": "string"
			},
			{
				"key": "accessToken",
				"value": "eyJraWQiOiJkZWQ5YWUwZS1lZjM3LTRmMTgtOTdiYi04YjNlNWU0MzAzN2YiLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiJqb2huZG9lQGVtYWlsLmNvbSIsImF1ZCI6IjkyYTY3MDkxLTQyNjQtNGNlNC04ZmNiLTNlYzZkYmZlZWExNiIsIm5iZiI6MTY3MTU3NDQyMSwic2NvcGUiOlsidXNlcjpjYW5TZWxmV3JpdGUiLCJ1c2VyOmNhblJlYWQiXSwiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDo5MDAwIiwiZXhwIjoxNjcxNTc1MzIxLCJpYXQiOjE2NzE1NzQ0MjF9.KdudZ_eQT1u8Pdc5015YWY_BBOqjIzeoloVzeWoxglYlS19smmoohPsnt26UWU7oBiDuLpbkb6uSTAzA9zzmvaaYQo5yai2-R_x1SWQ-LkaKAOQAagIWrORcdwFQsjPsgTlRA9gSJkoy7AfOBBkMvjsSBwXDZTXI5co-5bWDaaDX9WymsZc323BrZgQgXCB9HoyzF_Ch38Q8nAB5VIzQE-ojHWlTS3HLCvZ8UKDQpWbShMj76fmIc0rmk8Ab7B8aLzV6gXZsHXd7CgydgxEH8N3xi-P29j5_YgxRWeNzE0484ADfQ7c-jmGcrjCXCle67FjPYR4VY6pvW_zf5qx1NA",
				"type": "string"
			},
			{
				"key": "scope",
				"value": "user:canRead user:canSelfWrite",
				"type": "string"
			},
			{
				"key": "accessTokenUrl",
				"value": "{{AuthorizationServerURL}}/oauth2/token",
				"type": "string"
			},
			{
				"key": "authUrl",
				"value": "{{AuthorizationServerURL}}/oauth2/authorize",
				"type": "string"
			},
			{
				"key": "state",
				"value": "postman",
				"type": "string"
			},
			{
				"key": "clientSecret",
				"value": "{{AuthorizationCode-ClientSecret}}",
				"type": "string"
			},
			{
				"key": "clientId",
				"value": "{{AuthorizationCode-ClientId}}",
				"type": "string"
			},
			{
				"key": "redirect_uri",
				"value": "https://oidcdebugger.com/debug",
				"type": "string"
			},
			{
				"key": "grant_type",
				"value": "authorization_code",
				"type": "string"
			},
			{
				"key": "tokenName",
				"value": "TokenFromAuthorizationCode",
				"type": "string"
			},
			{
				"key": "addTokenTo",
				"value": "header",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "host",
			"value": "http://127.0.0.1:12001",
			"type": "string"
		},
		{
			"key": "ClientCredentials-ClientId",
			"value": "MHPasswordManager-GlobalAdmin",
			"type": "string"
		},
		{
			"key": "ClientCredentials-ClientSecret",
			"value": "8e18ee56-ab7c-4ed9-b192-ff4472e5c697",
			"type": "string"
		},
		{
			"key": "AuthorizationCode-ClientId",
			"value": "MHPasswordManager",
			"type": "string"
		},
		{
			"key": "AuthorizationCode-ClientSecret",
			"value": "fd04f93e-5e4d-4f16-98ae-9247f68d8619",
			"type": "string"
		},
		{
			"key": "AuthorizationCode",
			"value": "",
			"type": "string"
		},
		{
			"key": "AuthorizationServerURL",
			"value": "http://127.0.0.1:12010",
			"type": "string"
		},
		{
			"key": "BearerToken",
			"value": ""
		},
		{
			"key": "RefreshToken",
			"value": "",
			"type": "default"
		},
		{
			"key": "ServiceRegistryURL",
			"value": "http://127.0.0.1:8761",
			"type": "default"
		},
		{
			"key": "ServiceRegistryExampleAppId",
			"value": "USER-SERVICE",
			"type": "default"
		},
		{
			"key": "ServiceRegistryExampleInstanceId",
			"value": "192.168.1.37:users:8000",
			"type": "default"
		}
	]
}