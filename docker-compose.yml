version: '3.8'
services:
  config-services:
    image: mhpasswordmanager/config-services:dev
    restart: on-failure
    env_file:
      - docker-envs/CONFIG-SERVICES.env
    networks:
      - net-mhpasswordmanager
    ports:
      - "8888:8888"
  eureka-service-discovery:
    image: mhpasswordmanager/service-registry:dev
    restart: on-failure
    env_file:
      - docker-envs/SERVICE-REGISTRY.env
    networks:
      - net-mhpasswordmanager
    ports:
      - "8761:8761"
  oauth2-server:
    image: mhpasswordmanager/oauth2-server:dev
    restart: on-failure
    env_file:
      - docker-envs/OAUTH2-AUTHORIZATION-SERVER.env
    depends_on:
      - redis-store
      - eureka-service-discovery
      - postgres-db
      - config-services
      - rabbitmq
    networks:
      - net-mhpasswordmanager
    ports:
      - "12010:12010"
  api-gateway:
    image: mhpasswordmanager/api-gateway:dev
    restart: on-failure
    env_file:
      - docker-envs/API-GATEWAY.env
    depends_on:
      - eureka-service-discovery
    networks:
      - net-mhpasswordmanager
    ports:
      - "8080:8080"
  user-service:
    image: mhpasswordmanager/user-service:dev
    restart: on-failure
    env_file:
      - docker-envs/USER-SERVICE.env
    depends_on:
      - eureka-service-discovery
      - postgres-db
      - config-services
      - redis-store
    networks:
      - net-mhpasswordmanager
    ports:
      - "12011:12011"
  password-service:
    image: mhpasswordmanager/password-service:dev
    restart: on-failure
    env_file:
      - docker-envs/PASSWORD-SERVICE.env
    depends_on:
      - eureka-service-discovery
      - postgres-db
      - config-services
      - redis-store
    networks:
      - net-mhpasswordmanager
    ports:
      - "12012:12012"
  email-service:
    image: mhpasswordmanager/email-service:dev
    restart: on-failure
    env_file:
      - docker-envs/EMAIL-SERVICE.env
    depends_on:
      - eureka-service-discovery
      - config-services
      - redis-store
      - rabbitmq
  postgres-db:
    image: mhpasswordmanager/postgres:dev
    restart: on-failure
    env_file:
      - docker-envs/POSTGRES-DB.env
    networks:
      - net-mhpasswordmanager
    ports:
      - "5432:5432"
    volumes:
      - data-mhpasswordmanager-postgres-db:/var/lib/postgresql/data
  redis-store:
    image: mhpasswordmanager/redis:dev
    env_file:
      - docker-envs/REDIS-STORE.env
    restart: on-failure
    ports:
      - '6379:6379'
    volumes:
      - data-mhpasswordmanager-redis:/data
    networks:
      - net-mhpasswordmanager
  mongo-db:
    image: mhpasswordmanager/mongo:dev
    restart: on-failure
    env_file:
      - docker-envs/MONGO-DB.env
    networks:
      - net-mhpasswordmanager
    volumes:
      - data-mhpasswordmanager-mongo-db:/data/db
    ports:
      - "27017:27017"
  rabbitmq:
    image: mhpasswordmanager/rabbit:dev
    env_file:
      - docker-envs/RABBITMQ.env
    networks:
      - net-mhpasswordmanager
    volumes:
      - data-mhpasswordmanager-rabbitmq-data:/var/lib/rabbitmq
      - data-mhpasswordmanager-rabbitmq-logs:/var/log/rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
      - "25672:25672"
      - "15692:15692"
networks:
  net-mhpasswordmanager:
    driver: bridge
volumes:
  data-mhpasswordmanager-postgres-db:
  data-mhpasswordmanager-redis:
  data-mhpasswordmanager-mongo-db:
  data-mhpasswordmanager-rabbitmq-logs:
  data-mhpasswordmanager-rabbitmq-data:
